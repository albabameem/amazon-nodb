{"ast":null,"code":"'use strict';\n\nconst BaseError = require('./base-error');\n/**\n * Thrown when a query is passed invalid options (see message for details)\n */\n\n\nclass QueryError extends BaseError {\n  constructor(message) {\n    super(message);\n    this.name = 'SequelizeQueryError';\n  }\n\n}\n\nmodule.exports = QueryError;","map":{"version":3,"sources":["/Users/albab/bookapro/amazon/node_modules/sequelize/lib/errors/query-error.js"],"names":["BaseError","require","QueryError","constructor","message","name","module","exports"],"mappings":"AAAA;;AAEA,MAAMA,SAAS,GAAGC,OAAO,CAAC,cAAD,CAAzB;AAEA;AACA;AACA;;;AACA,MAAMC,UAAN,SAAyBF,SAAzB,CAAmC;AACjCG,EAAAA,WAAW,CAACC,OAAD,EAAU;AACnB,UAAMA,OAAN;AACA,SAAKC,IAAL,GAAY,qBAAZ;AACD;;AAJgC;;AAOnCC,MAAM,CAACC,OAAP,GAAiBL,UAAjB","sourcesContent":["'use strict';\n\nconst BaseError = require('./base-error');\n\n/**\n * Thrown when a query is passed invalid options (see message for details)\n */\nclass QueryError extends BaseError {\n  constructor(message) {\n    super(message);\n    this.name = 'SequelizeQueryError';\n  }\n}\n\nmodule.exports = QueryError;\n"]},"metadata":{},"sourceType":"script"}