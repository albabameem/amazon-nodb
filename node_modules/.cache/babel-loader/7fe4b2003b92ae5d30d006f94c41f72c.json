{"ast":null,"code":"define(['jquery', '../utils'], function ($, Utils) {\n  function InputData(decorated, $element, options) {\n    this._currentData = [];\n    this._valueSeparator = options.get('valueSeparator') || ',';\n\n    if ($element.prop('type') === 'hidden') {\n      if (options.get('debug') && console && console.warn) {\n        console.warn('Select2: Using a hidden input with Select2 is no longer ' + 'supported and may stop working in the future. It is recommended ' + 'to use a `<select>` element instead.');\n      }\n    }\n\n    decorated.call(this, $element, options);\n  }\n\n  InputData.prototype.current = function (_, callback) {\n    function getSelected(data, selectedIds) {\n      var selected = [];\n\n      if (data.selected || $.inArray(data.id, selectedIds) !== -1) {\n        data.selected = true;\n        selected.push(data);\n      } else {\n        data.selected = false;\n      }\n\n      if (data.children) {\n        selected.push.apply(selected, getSelected(data.children, selectedIds));\n      }\n\n      return selected;\n    }\n\n    var selected = [];\n\n    for (var d = 0; d < this._currentData.length; d++) {\n      var data = this._currentData[d];\n      selected.push.apply(selected, getSelected(data, this.$element.val().split(this._valueSeparator)));\n    }\n\n    callback(selected);\n  };\n\n  InputData.prototype.select = function (_, data) {\n    if (!this.options.get('multiple')) {\n      this.current(function (allData) {\n        $.map(allData, function (data) {\n          data.selected = false;\n        });\n      });\n      this.$element.val(data.id);\n      this.$element.trigger('input').trigger('change');\n    } else {\n      var value = this.$element.val();\n      value += this._valueSeparator + data.id;\n      this.$element.val(value);\n      this.$element.trigger('input').trigger('change');\n    }\n  };\n\n  InputData.prototype.unselect = function (_, data) {\n    var self = this;\n    data.selected = false;\n    this.current(function (allData) {\n      var values = [];\n\n      for (var d = 0; d < allData.length; d++) {\n        var item = allData[d];\n\n        if (data.id == item.id) {\n          continue;\n        }\n\n        values.push(item.id);\n      }\n\n      self.$element.val(values.join(self._valueSeparator));\n      self.$element.trigger('input').trigger('change');\n    });\n  };\n\n  InputData.prototype.query = function (_, params, callback) {\n    var results = [];\n\n    for (var d = 0; d < this._currentData.length; d++) {\n      var data = this._currentData[d];\n      var matches = this.matches(params, data);\n\n      if (matches !== null) {\n        results.push(matches);\n      }\n    }\n\n    callback({\n      results: results\n    });\n  };\n\n  InputData.prototype.addOptions = function (_, $options) {\n    var options = $.map($options, function ($option) {\n      return Utils.GetData($option[0], 'data');\n    });\n\n    this._currentData.push.apply(this._currentData, options);\n  };\n\n  return InputData;\n});","map":{"version":3,"sources":["/Users/albab/bookapro/amazon/src/assets/vendor/select2/src/js/select2/compat/inputData.js"],"names":["define","$","Utils","InputData","decorated","$element","options","_currentData","_valueSeparator","get","prop","console","warn","call","prototype","current","_","callback","getSelected","data","selectedIds","selected","inArray","id","push","children","apply","d","length","val","split","select","allData","map","trigger","value","unselect","self","values","item","join","query","params","results","matches","addOptions","$options","$option","GetData"],"mappings":"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","sourcesContent":["define([\n  'jquery',\n  '../utils'\n], function ($, Utils) {\n  function InputData (decorated, $element, options) {\n    this._currentData = [];\n    this._valueSeparator = options.get('valueSeparator') || ',';\n\n    if ($element.prop('type') === 'hidden') {\n      if (options.get('debug') && console && console.warn) {\n        console.warn(\n          'Select2: Using a hidden input with Select2 is no longer ' +\n          'supported and may stop working in the future. It is recommended ' +\n          'to use a `<select>` element instead.'\n        );\n      }\n    }\n\n    decorated.call(this, $element, options);\n  }\n\n  InputData.prototype.current = function (_, callback) {\n    function getSelected (data, selectedIds) {\n      var selected = [];\n\n      if (data.selected || $.inArray(data.id, selectedIds) !== -1) {\n        data.selected = true;\n        selected.push(data);\n      } else {\n        data.selected = false;\n      }\n\n      if (data.children) {\n        selected.push.apply(selected, getSelected(data.children, selectedIds));\n      }\n\n      return selected;\n    }\n\n    var selected = [];\n\n    for (var d = 0; d < this._currentData.length; d++) {\n      var data = this._currentData[d];\n\n      selected.push.apply(\n        selected,\n        getSelected(\n          data,\n          this.$element.val().split(\n            this._valueSeparator\n          )\n        )\n      );\n    }\n\n    callback(selected);\n  };\n\n  InputData.prototype.select = function (_, data) {\n    if (!this.options.get('multiple')) {\n      this.current(function (allData) {\n        $.map(allData, function (data) {\n          data.selected = false;\n        });\n      });\n\n      this.$element.val(data.id);\n      this.$element.trigger('input').trigger('change');\n    } else {\n      var value = this.$element.val();\n      value += this._valueSeparator + data.id;\n\n      this.$element.val(value);\n      this.$element.trigger('input').trigger('change');\n    }\n  };\n\n  InputData.prototype.unselect = function (_, data) {\n    var self = this;\n\n    data.selected = false;\n\n    this.current(function (allData) {\n      var values = [];\n\n      for (var d = 0; d < allData.length; d++) {\n        var item = allData[d];\n\n        if (data.id == item.id) {\n          continue;\n        }\n\n        values.push(item.id);\n      }\n\n      self.$element.val(values.join(self._valueSeparator));\n      self.$element.trigger('input').trigger('change');\n    });\n  };\n\n  InputData.prototype.query = function (_, params, callback) {\n    var results = [];\n\n    for (var d = 0; d < this._currentData.length; d++) {\n      var data = this._currentData[d];\n\n      var matches = this.matches(params, data);\n\n      if (matches !== null) {\n        results.push(matches);\n      }\n    }\n\n    callback({\n      results: results\n    });\n  };\n\n  InputData.prototype.addOptions = function (_, $options) {\n    var options = $.map($options, function ($option) {\n      return Utils.GetData($option[0], 'data');\n    });\n\n    this._currentData.push.apply(this._currentData, options);\n  };\n\n  return InputData;\n});\n"]},"metadata":{},"sourceType":"module"}