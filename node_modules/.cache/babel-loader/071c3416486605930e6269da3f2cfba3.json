{"ast":null,"code":"define([], function () {\n  function CloseOnSelect() {}\n\n  CloseOnSelect.prototype.bind = function (decorated, container, $container) {\n    var self = this;\n    decorated.call(this, container, $container);\n    container.on('select', function (evt) {\n      self._selectTriggered(evt);\n    });\n    container.on('unselect', function (evt) {\n      self._selectTriggered(evt);\n    });\n  };\n\n  CloseOnSelect.prototype._selectTriggered = function (_, evt) {\n    var originalEvent = evt.originalEvent; // Don't close if the control key is being held\n\n    if (originalEvent && (originalEvent.ctrlKey || originalEvent.metaKey)) {\n      return;\n    }\n\n    this.trigger('close', {\n      originalEvent: originalEvent,\n      originalSelect2Event: evt\n    });\n  };\n\n  return CloseOnSelect;\n});","map":{"version":3,"sources":["/Users/albab/bookapro/amazon/src/assets/vendor/select2/src/js/select2/dropdown/closeOnSelect.js"],"names":["define","CloseOnSelect","prototype","bind","decorated","container","$container","self","call","on","evt","_selectTriggered","_","originalEvent","ctrlKey","metaKey","trigger","originalSelect2Event"],"mappings":"AAAAA,MAAM,CAAC,EAAD,EAEH,YAAY;AACb,WAASC,aAAT,GAA0B,CAAG;;AAE7BA,EAAAA,aAAa,CAACC,SAAd,CAAwBC,IAAxB,GAA+B,UAAUC,SAAV,EAAqBC,SAArB,EAAgCC,UAAhC,EAA4C;AACzE,QAAIC,IAAI,GAAG,IAAX;AAEAH,IAAAA,SAAS,CAACI,IAAV,CAAe,IAAf,EAAqBH,SAArB,EAAgCC,UAAhC;AAEAD,IAAAA,SAAS,CAACI,EAAV,CAAa,QAAb,EAAuB,UAAUC,GAAV,EAAe;AACpCH,MAAAA,IAAI,CAACI,gBAAL,CAAsBD,GAAtB;AACD,KAFD;AAIAL,IAAAA,SAAS,CAACI,EAAV,CAAa,UAAb,EAAyB,UAAUC,GAAV,EAAe;AACtCH,MAAAA,IAAI,CAACI,gBAAL,CAAsBD,GAAtB;AACD,KAFD;AAGD,GAZD;;AAcAT,EAAAA,aAAa,CAACC,SAAd,CAAwBS,gBAAxB,GAA2C,UAAUC,CAAV,EAAaF,GAAb,EAAkB;AAC3D,QAAIG,aAAa,GAAGH,GAAG,CAACG,aAAxB,CAD2D,CAG3D;;AACA,QAAIA,aAAa,KAAKA,aAAa,CAACC,OAAd,IAAyBD,aAAa,CAACE,OAA5C,CAAjB,EAAuE;AACrE;AACD;;AAED,SAAKC,OAAL,CAAa,OAAb,EAAsB;AACpBH,MAAAA,aAAa,EAAEA,aADK;AAEpBI,MAAAA,oBAAoB,EAAEP;AAFF,KAAtB;AAID,GAZD;;AAcA,SAAOT,aAAP;AACD,CAlCK,CAAN","sourcesContent":["define([\n\n], function () {\n  function CloseOnSelect () { }\n\n  CloseOnSelect.prototype.bind = function (decorated, container, $container) {\n    var self = this;\n\n    decorated.call(this, container, $container);\n\n    container.on('select', function (evt) {\n      self._selectTriggered(evt);\n    });\n\n    container.on('unselect', function (evt) {\n      self._selectTriggered(evt);\n    });\n  };\n\n  CloseOnSelect.prototype._selectTriggered = function (_, evt) {\n    var originalEvent = evt.originalEvent;\n\n    // Don't close if the control key is being held\n    if (originalEvent && (originalEvent.ctrlKey || originalEvent.metaKey)) {\n      return;\n    }\n\n    this.trigger('close', {\n      originalEvent: originalEvent,\n      originalSelect2Event: evt\n    });\n  };\n\n  return CloseOnSelect;\n});\n"]},"metadata":{},"sourceType":"module"}