{"ast":null,"code":"define(['require', 'jquery', './defaults', './utils'], function (require, $, Defaults, Utils) {\n  function Options(options, $element) {\n    this.options = options;\n\n    if ($element != null) {\n      this.fromElement($element);\n    }\n\n    if ($element != null) {\n      this.options = Defaults.applyFromElement(this.options, $element);\n    }\n\n    this.options = Defaults.apply(this.options);\n\n    if ($element && $element.is('input')) {\n      var InputCompat = require(this.get('amdBase') + 'compat/inputData');\n\n      this.options.dataAdapter = Utils.Decorate(this.options.dataAdapter, InputCompat);\n    }\n  }\n\n  Options.prototype.fromElement = function ($e) {\n    var excludedData = ['select2'];\n\n    if (this.options.multiple == null) {\n      this.options.multiple = $e.prop('multiple');\n    }\n\n    if (this.options.disabled == null) {\n      this.options.disabled = $e.prop('disabled');\n    }\n\n    if (this.options.dir == null) {\n      if ($e.prop('dir')) {\n        this.options.dir = $e.prop('dir');\n      } else if ($e.closest('[dir]').prop('dir')) {\n        this.options.dir = $e.closest('[dir]').prop('dir');\n      } else {\n        this.options.dir = 'ltr';\n      }\n    }\n\n    $e.prop('disabled', this.options.disabled);\n    $e.prop('multiple', this.options.multiple);\n\n    if (Utils.GetData($e[0], 'select2Tags')) {\n      if (this.options.debug && window.console && console.warn) {\n        console.warn('Select2: The `data-select2-tags` attribute has been changed to ' + 'use the `data-data` and `data-tags=\"true\"` attributes and will be ' + 'removed in future versions of Select2.');\n      }\n\n      Utils.StoreData($e[0], 'data', Utils.GetData($e[0], 'select2Tags'));\n      Utils.StoreData($e[0], 'tags', true);\n    }\n\n    if (Utils.GetData($e[0], 'ajaxUrl')) {\n      if (this.options.debug && window.console && console.warn) {\n        console.warn('Select2: The `data-ajax-url` attribute has been changed to ' + '`data-ajax--url` and support for the old attribute will be removed' + ' in future versions of Select2.');\n      }\n\n      $e.attr('ajax--url', Utils.GetData($e[0], 'ajaxUrl'));\n      Utils.StoreData($e[0], 'ajax-Url', Utils.GetData($e[0], 'ajaxUrl'));\n    }\n\n    var dataset = {};\n\n    function upperCaseLetter(_, letter) {\n      return letter.toUpperCase();\n    } // Pre-load all of the attributes which are prefixed with `data-`\n\n\n    for (var attr = 0; attr < $e[0].attributes.length; attr++) {\n      var attributeName = $e[0].attributes[attr].name;\n      var prefix = 'data-';\n\n      if (attributeName.substr(0, prefix.length) == prefix) {\n        // Get the contents of the attribute after `data-`\n        var dataName = attributeName.substring(prefix.length); // Get the data contents from the consistent source\n        // This is more than likely the jQuery data helper\n\n        var dataValue = Utils.GetData($e[0], dataName); // camelCase the attribute name to match the spec\n\n        var camelDataName = dataName.replace(/-([a-z])/g, upperCaseLetter); // Store the data attribute contents into the dataset since\n\n        dataset[camelDataName] = dataValue;\n      }\n    } // Prefer the element's `dataset` attribute if it exists\n    // jQuery 1.x does not correctly handle data attributes with multiple dashes\n\n\n    if ($.fn.jquery && $.fn.jquery.substr(0, 2) == '1.' && $e[0].dataset) {\n      dataset = $.extend(true, {}, $e[0].dataset, dataset);\n    } // Prefer our internal data cache if it exists\n\n\n    var data = $.extend(true, {}, Utils.GetData($e[0]), dataset);\n    data = Utils._convertData(data);\n\n    for (var key in data) {\n      if ($.inArray(key, excludedData) > -1) {\n        continue;\n      }\n\n      if ($.isPlainObject(this.options[key])) {\n        $.extend(this.options[key], data[key]);\n      } else {\n        this.options[key] = data[key];\n      }\n    }\n\n    return this;\n  };\n\n  Options.prototype.get = function (key) {\n    return this.options[key];\n  };\n\n  Options.prototype.set = function (key, val) {\n    this.options[key] = val;\n  };\n\n  return Options;\n});","map":{"version":3,"sources":["/Users/albab/bookapro/amazon/src/assets/vendor/select2/src/js/select2/options.js"],"names":["define","require","$","Defaults","Utils","Options","options","$element","fromElement","applyFromElement","apply","is","InputCompat","get","dataAdapter","Decorate","prototype","$e","excludedData","multiple","prop","disabled","dir","closest","GetData","debug","window","console","warn","StoreData","attr","dataset","upperCaseLetter","_","letter","toUpperCase","attributes","length","attributeName","name","prefix","substr","dataName","substring","dataValue","camelDataName","replace","fn","jquery","extend","data","_convertData","key","inArray","isPlainObject","set","val"],"mappings":"AAAAA,MAAM,CAAC,CACL,SADK,EAEL,QAFK,EAGL,YAHK,EAIL,SAJK,CAAD,EAKH,UAAUC,OAAV,EAAmBC,CAAnB,EAAsBC,QAAtB,EAAgCC,KAAhC,EAAuC;AACxC,WAASC,OAAT,CAAkBC,OAAlB,EAA2BC,QAA3B,EAAqC;AACnC,SAAKD,OAAL,GAAeA,OAAf;;AAEA,QAAIC,QAAQ,IAAI,IAAhB,EAAsB;AACpB,WAAKC,WAAL,CAAiBD,QAAjB;AACD;;AAED,QAAIA,QAAQ,IAAI,IAAhB,EAAsB;AACpB,WAAKD,OAAL,GAAeH,QAAQ,CAACM,gBAAT,CAA0B,KAAKH,OAA/B,EAAwCC,QAAxC,CAAf;AACD;;AAED,SAAKD,OAAL,GAAeH,QAAQ,CAACO,KAAT,CAAe,KAAKJ,OAApB,CAAf;;AAEA,QAAIC,QAAQ,IAAIA,QAAQ,CAACI,EAAT,CAAY,OAAZ,CAAhB,EAAsC;AACpC,UAAIC,WAAW,GAAGX,OAAO,CAAC,KAAKY,GAAL,CAAS,SAAT,IAAsB,kBAAvB,CAAzB;;AAEA,WAAKP,OAAL,CAAaQ,WAAb,GAA2BV,KAAK,CAACW,QAAN,CACzB,KAAKT,OAAL,CAAaQ,WADY,EAEzBF,WAFyB,CAA3B;AAID;AACF;;AAEDP,EAAAA,OAAO,CAACW,SAAR,CAAkBR,WAAlB,GAAgC,UAAUS,EAAV,EAAc;AAC5C,QAAIC,YAAY,GAAG,CAAC,SAAD,CAAnB;;AAEA,QAAI,KAAKZ,OAAL,CAAaa,QAAb,IAAyB,IAA7B,EAAmC;AACjC,WAAKb,OAAL,CAAaa,QAAb,GAAwBF,EAAE,CAACG,IAAH,CAAQ,UAAR,CAAxB;AACD;;AAED,QAAI,KAAKd,OAAL,CAAae,QAAb,IAAyB,IAA7B,EAAmC;AACjC,WAAKf,OAAL,CAAae,QAAb,GAAwBJ,EAAE,CAACG,IAAH,CAAQ,UAAR,CAAxB;AACD;;AAED,QAAI,KAAKd,OAAL,CAAagB,GAAb,IAAoB,IAAxB,EAA8B;AAC5B,UAAIL,EAAE,CAACG,IAAH,CAAQ,KAAR,CAAJ,EAAoB;AAClB,aAAKd,OAAL,CAAagB,GAAb,GAAmBL,EAAE,CAACG,IAAH,CAAQ,KAAR,CAAnB;AACD,OAFD,MAEO,IAAIH,EAAE,CAACM,OAAH,CAAW,OAAX,EAAoBH,IAApB,CAAyB,KAAzB,CAAJ,EAAqC;AAC1C,aAAKd,OAAL,CAAagB,GAAb,GAAmBL,EAAE,CAACM,OAAH,CAAW,OAAX,EAAoBH,IAApB,CAAyB,KAAzB,CAAnB;AACD,OAFM,MAEA;AACL,aAAKd,OAAL,CAAagB,GAAb,GAAmB,KAAnB;AACD;AACF;;AAEDL,IAAAA,EAAE,CAACG,IAAH,CAAQ,UAAR,EAAoB,KAAKd,OAAL,CAAae,QAAjC;AACAJ,IAAAA,EAAE,CAACG,IAAH,CAAQ,UAAR,EAAoB,KAAKd,OAAL,CAAaa,QAAjC;;AAEA,QAAIf,KAAK,CAACoB,OAAN,CAAcP,EAAE,CAAC,CAAD,CAAhB,EAAqB,aAArB,CAAJ,EAAyC;AACvC,UAAI,KAAKX,OAAL,CAAamB,KAAb,IAAsBC,MAAM,CAACC,OAA7B,IAAwCA,OAAO,CAACC,IAApD,EAA0D;AACxDD,QAAAA,OAAO,CAACC,IAAR,CACE,oEACA,oEADA,GAEA,wCAHF;AAKD;;AAEDxB,MAAAA,KAAK,CAACyB,SAAN,CAAgBZ,EAAE,CAAC,CAAD,CAAlB,EAAuB,MAAvB,EAA+Bb,KAAK,CAACoB,OAAN,CAAcP,EAAE,CAAC,CAAD,CAAhB,EAAqB,aAArB,CAA/B;AACAb,MAAAA,KAAK,CAACyB,SAAN,CAAgBZ,EAAE,CAAC,CAAD,CAAlB,EAAuB,MAAvB,EAA+B,IAA/B;AACD;;AAED,QAAIb,KAAK,CAACoB,OAAN,CAAcP,EAAE,CAAC,CAAD,CAAhB,EAAqB,SAArB,CAAJ,EAAqC;AACnC,UAAI,KAAKX,OAAL,CAAamB,KAAb,IAAsBC,MAAM,CAACC,OAA7B,IAAwCA,OAAO,CAACC,IAApD,EAA0D;AACxDD,QAAAA,OAAO,CAACC,IAAR,CACE,gEACA,oEADA,GAEA,iCAHF;AAKD;;AAEDX,MAAAA,EAAE,CAACa,IAAH,CAAQ,WAAR,EAAqB1B,KAAK,CAACoB,OAAN,CAAcP,EAAE,CAAC,CAAD,CAAhB,EAAqB,SAArB,CAArB;AACAb,MAAAA,KAAK,CAACyB,SAAN,CAAgBZ,EAAE,CAAC,CAAD,CAAlB,EAAuB,UAAvB,EAAmCb,KAAK,CAACoB,OAAN,CAAcP,EAAE,CAAC,CAAD,CAAhB,EAAqB,SAArB,CAAnC;AACD;;AAED,QAAIc,OAAO,GAAG,EAAd;;AAEA,aAASC,eAAT,CAAyBC,CAAzB,EAA4BC,MAA5B,EAAoC;AAClC,aAAOA,MAAM,CAACC,WAAP,EAAP;AACD,KAtD2C,CAwD5C;;;AACA,SAAK,IAAIL,IAAI,GAAG,CAAhB,EAAmBA,IAAI,GAAGb,EAAE,CAAC,CAAD,CAAF,CAAMmB,UAAN,CAAiBC,MAA3C,EAAmDP,IAAI,EAAvD,EAA2D;AACzD,UAAIQ,aAAa,GAAGrB,EAAE,CAAC,CAAD,CAAF,CAAMmB,UAAN,CAAiBN,IAAjB,EAAuBS,IAA3C;AACA,UAAIC,MAAM,GAAG,OAAb;;AAEA,UAAIF,aAAa,CAACG,MAAd,CAAqB,CAArB,EAAwBD,MAAM,CAACH,MAA/B,KAA0CG,MAA9C,EAAsD;AACpD;AACA,YAAIE,QAAQ,GAAGJ,aAAa,CAACK,SAAd,CAAwBH,MAAM,CAACH,MAA/B,CAAf,CAFoD,CAIpD;AACA;;AACA,YAAIO,SAAS,GAAGxC,KAAK,CAACoB,OAAN,CAAcP,EAAE,CAAC,CAAD,CAAhB,EAAqByB,QAArB,CAAhB,CANoD,CAQpD;;AACA,YAAIG,aAAa,GAAGH,QAAQ,CAACI,OAAT,CAAiB,WAAjB,EAA8Bd,eAA9B,CAApB,CAToD,CAWpD;;AACAD,QAAAA,OAAO,CAACc,aAAD,CAAP,GAAyBD,SAAzB;AACD;AACF,KA3E2C,CA6E5C;AACA;;;AACA,QAAI1C,CAAC,CAAC6C,EAAF,CAAKC,MAAL,IAAe9C,CAAC,CAAC6C,EAAF,CAAKC,MAAL,CAAYP,MAAZ,CAAmB,CAAnB,EAAsB,CAAtB,KAA4B,IAA3C,IAAmDxB,EAAE,CAAC,CAAD,CAAF,CAAMc,OAA7D,EAAsE;AACpEA,MAAAA,OAAO,GAAG7B,CAAC,CAAC+C,MAAF,CAAS,IAAT,EAAe,EAAf,EAAmBhC,EAAE,CAAC,CAAD,CAAF,CAAMc,OAAzB,EAAkCA,OAAlC,CAAV;AACD,KAjF2C,CAmF5C;;;AACA,QAAImB,IAAI,GAAGhD,CAAC,CAAC+C,MAAF,CAAS,IAAT,EAAe,EAAf,EAAmB7C,KAAK,CAACoB,OAAN,CAAcP,EAAE,CAAC,CAAD,CAAhB,CAAnB,EAAyCc,OAAzC,CAAX;AAEAmB,IAAAA,IAAI,GAAG9C,KAAK,CAAC+C,YAAN,CAAmBD,IAAnB,CAAP;;AAEA,SAAK,IAAIE,GAAT,IAAgBF,IAAhB,EAAsB;AACpB,UAAIhD,CAAC,CAACmD,OAAF,CAAUD,GAAV,EAAelC,YAAf,IAA+B,CAAC,CAApC,EAAuC;AACrC;AACD;;AAED,UAAIhB,CAAC,CAACoD,aAAF,CAAgB,KAAKhD,OAAL,CAAa8C,GAAb,CAAhB,CAAJ,EAAwC;AACtClD,QAAAA,CAAC,CAAC+C,MAAF,CAAS,KAAK3C,OAAL,CAAa8C,GAAb,CAAT,EAA4BF,IAAI,CAACE,GAAD,CAAhC;AACD,OAFD,MAEO;AACL,aAAK9C,OAAL,CAAa8C,GAAb,IAAoBF,IAAI,CAACE,GAAD,CAAxB;AACD;AACF;;AAED,WAAO,IAAP;AACD,GArGD;;AAuGA/C,EAAAA,OAAO,CAACW,SAAR,CAAkBH,GAAlB,GAAwB,UAAUuC,GAAV,EAAe;AACrC,WAAO,KAAK9C,OAAL,CAAa8C,GAAb,CAAP;AACD,GAFD;;AAIA/C,EAAAA,OAAO,CAACW,SAAR,CAAkBuC,GAAlB,GAAwB,UAAUH,GAAV,EAAeI,GAAf,EAAoB;AAC1C,SAAKlD,OAAL,CAAa8C,GAAb,IAAoBI,GAApB;AACD,GAFD;;AAIA,SAAOnD,OAAP;AACD,CA7IK,CAAN","sourcesContent":["define([\n  'require',\n  'jquery',\n  './defaults',\n  './utils'\n], function (require, $, Defaults, Utils) {\n  function Options (options, $element) {\n    this.options = options;\n\n    if ($element != null) {\n      this.fromElement($element);\n    }\n\n    if ($element != null) {\n      this.options = Defaults.applyFromElement(this.options, $element);\n    }\n\n    this.options = Defaults.apply(this.options);\n\n    if ($element && $element.is('input')) {\n      var InputCompat = require(this.get('amdBase') + 'compat/inputData');\n\n      this.options.dataAdapter = Utils.Decorate(\n        this.options.dataAdapter,\n        InputCompat\n      );\n    }\n  }\n\n  Options.prototype.fromElement = function ($e) {\n    var excludedData = ['select2'];\n\n    if (this.options.multiple == null) {\n      this.options.multiple = $e.prop('multiple');\n    }\n\n    if (this.options.disabled == null) {\n      this.options.disabled = $e.prop('disabled');\n    }\n\n    if (this.options.dir == null) {\n      if ($e.prop('dir')) {\n        this.options.dir = $e.prop('dir');\n      } else if ($e.closest('[dir]').prop('dir')) {\n        this.options.dir = $e.closest('[dir]').prop('dir');\n      } else {\n        this.options.dir = 'ltr';\n      }\n    }\n\n    $e.prop('disabled', this.options.disabled);\n    $e.prop('multiple', this.options.multiple);\n\n    if (Utils.GetData($e[0], 'select2Tags')) {\n      if (this.options.debug && window.console && console.warn) {\n        console.warn(\n          'Select2: The `data-select2-tags` attribute has been changed to ' +\n          'use the `data-data` and `data-tags=\"true\"` attributes and will be ' +\n          'removed in future versions of Select2.'\n        );\n      }\n\n      Utils.StoreData($e[0], 'data', Utils.GetData($e[0], 'select2Tags'));\n      Utils.StoreData($e[0], 'tags', true);\n    }\n\n    if (Utils.GetData($e[0], 'ajaxUrl')) {\n      if (this.options.debug && window.console && console.warn) {\n        console.warn(\n          'Select2: The `data-ajax-url` attribute has been changed to ' +\n          '`data-ajax--url` and support for the old attribute will be removed' +\n          ' in future versions of Select2.'\n        );\n      }\n\n      $e.attr('ajax--url', Utils.GetData($e[0], 'ajaxUrl'));\n      Utils.StoreData($e[0], 'ajax-Url', Utils.GetData($e[0], 'ajaxUrl'));\n    }\n\n    var dataset = {};\n\n    function upperCaseLetter(_, letter) {\n      return letter.toUpperCase();\n    }\n\n    // Pre-load all of the attributes which are prefixed with `data-`\n    for (var attr = 0; attr < $e[0].attributes.length; attr++) {\n      var attributeName = $e[0].attributes[attr].name;\n      var prefix = 'data-';\n\n      if (attributeName.substr(0, prefix.length) == prefix) {\n        // Get the contents of the attribute after `data-`\n        var dataName = attributeName.substring(prefix.length);\n\n        // Get the data contents from the consistent source\n        // This is more than likely the jQuery data helper\n        var dataValue = Utils.GetData($e[0], dataName);\n\n        // camelCase the attribute name to match the spec\n        var camelDataName = dataName.replace(/-([a-z])/g, upperCaseLetter);\n\n        // Store the data attribute contents into the dataset since\n        dataset[camelDataName] = dataValue;\n      }\n    }\n\n    // Prefer the element's `dataset` attribute if it exists\n    // jQuery 1.x does not correctly handle data attributes with multiple dashes\n    if ($.fn.jquery && $.fn.jquery.substr(0, 2) == '1.' && $e[0].dataset) {\n      dataset = $.extend(true, {}, $e[0].dataset, dataset);\n    }\n\n    // Prefer our internal data cache if it exists\n    var data = $.extend(true, {}, Utils.GetData($e[0]), dataset);\n\n    data = Utils._convertData(data);\n\n    for (var key in data) {\n      if ($.inArray(key, excludedData) > -1) {\n        continue;\n      }\n\n      if ($.isPlainObject(this.options[key])) {\n        $.extend(this.options[key], data[key]);\n      } else {\n        this.options[key] = data[key];\n      }\n    }\n\n    return this;\n  };\n\n  Options.prototype.get = function (key) {\n    return this.options[key];\n  };\n\n  Options.prototype.set = function (key, val) {\n    this.options[key] = val;\n  };\n\n  return Options;\n});\n"]},"metadata":{},"sourceType":"module"}