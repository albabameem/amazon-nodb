{"ast":null,"code":"import Parchment from 'parchment';\n\nclass IdentAttributor extends Parchment.Attributor.Class {\n  add(node, value) {\n    if (value === '+1' || value === '-1') {\n      let indent = this.value(node) || 0;\n      value = value === '+1' ? indent + 1 : indent - 1;\n    }\n\n    if (value === 0) {\n      this.remove(node);\n      return true;\n    } else {\n      return super.add(node, value);\n    }\n  }\n\n  canAdd(node, value) {\n    return super.canAdd(node, value) || super.canAdd(node, parseInt(value));\n  }\n\n  value(node) {\n    return parseInt(super.value(node)) || undefined; // Don't return NaN\n  }\n\n}\n\nlet IndentClass = new IdentAttributor('indent', 'ql-indent', {\n  scope: Parchment.Scope.BLOCK,\n  whitelist: [1, 2, 3, 4, 5, 6, 7, 8]\n});\nexport { IndentClass };","map":{"version":3,"sources":["/Users/albab/bookapro/amazon/src/assets/vendor/quill/formats/indent.js"],"names":["Parchment","IdentAttributor","Attributor","Class","add","node","value","indent","remove","canAdd","parseInt","undefined","IndentClass","scope","Scope","BLOCK","whitelist"],"mappings":"AAAA,OAAOA,SAAP,MAAsB,WAAtB;;AAEA,MAAMC,eAAN,SAA8BD,SAAS,CAACE,UAAV,CAAqBC,KAAnD,CAAyD;AACvDC,EAAAA,GAAG,CAACC,IAAD,EAAOC,KAAP,EAAc;AACf,QAAIA,KAAK,KAAK,IAAV,IAAkBA,KAAK,KAAK,IAAhC,EAAsC;AACpC,UAAIC,MAAM,GAAG,KAAKD,KAAL,CAAWD,IAAX,KAAoB,CAAjC;AACAC,MAAAA,KAAK,GAAIA,KAAK,KAAK,IAAV,GAAkBC,MAAM,GAAG,CAA3B,GAAiCA,MAAM,GAAG,CAAnD;AACD;;AACD,QAAID,KAAK,KAAK,CAAd,EAAiB;AACf,WAAKE,MAAL,CAAYH,IAAZ;AACA,aAAO,IAAP;AACD,KAHD,MAGO;AACL,aAAO,MAAMD,GAAN,CAAUC,IAAV,EAAgBC,KAAhB,CAAP;AACD;AACF;;AAEDG,EAAAA,MAAM,CAACJ,IAAD,EAAOC,KAAP,EAAc;AAClB,WAAO,MAAMG,MAAN,CAAaJ,IAAb,EAAmBC,KAAnB,KAA6B,MAAMG,MAAN,CAAaJ,IAAb,EAAmBK,QAAQ,CAACJ,KAAD,CAA3B,CAApC;AACD;;AAEDA,EAAAA,KAAK,CAACD,IAAD,EAAO;AACV,WAAOK,QAAQ,CAAC,MAAMJ,KAAN,CAAYD,IAAZ,CAAD,CAAR,IAA+BM,SAAtC,CADU,CACwC;AACnD;;AApBsD;;AAuBzD,IAAIC,WAAW,GAAG,IAAIX,eAAJ,CAAoB,QAApB,EAA8B,WAA9B,EAA2C;AAC3DY,EAAAA,KAAK,EAAEb,SAAS,CAACc,KAAV,CAAgBC,KADoC;AAE3DC,EAAAA,SAAS,EAAE,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,EAAa,CAAb,EAAgB,CAAhB,EAAmB,CAAnB,EAAsB,CAAtB;AAFgD,CAA3C,CAAlB;AAKA,SAASJ,WAAT","sourcesContent":["import Parchment from 'parchment';\n\nclass IdentAttributor extends Parchment.Attributor.Class {\n  add(node, value) {\n    if (value === '+1' || value === '-1') {\n      let indent = this.value(node) || 0;\n      value = (value === '+1' ? (indent + 1) : (indent - 1));\n    }\n    if (value === 0) {\n      this.remove(node);\n      return true;\n    } else {\n      return super.add(node, value);\n    }\n  }\n\n  canAdd(node, value) {\n    return super.canAdd(node, value) || super.canAdd(node, parseInt(value));\n  }\n\n  value(node) {\n    return parseInt(super.value(node)) || undefined;  // Don't return NaN\n  }\n}\n\nlet IndentClass = new IdentAttributor('indent', 'ql-indent', {\n  scope: Parchment.Scope.BLOCK,\n  whitelist: [1, 2, 3, 4, 5, 6, 7, 8]\n});\n\nexport { IndentClass };\n"]},"metadata":{},"sourceType":"module"}