{"ast":null,"code":"define(['jquery'], function ($) {\n  function Tokenizer(decorated, $element, options) {\n    var tokenizer = options.get('tokenizer');\n\n    if (tokenizer !== undefined) {\n      this.tokenizer = tokenizer;\n    }\n\n    decorated.call(this, $element, options);\n  }\n\n  Tokenizer.prototype.bind = function (decorated, container, $container) {\n    decorated.call(this, container, $container);\n    this.$search = container.dropdown.$search || container.selection.$search || $container.find('.select2-search__field');\n  };\n\n  Tokenizer.prototype.query = function (decorated, params, callback) {\n    var self = this;\n\n    function createAndSelect(data) {\n      // Normalize the data object so we can use it for checks\n      var item = self._normalizeItem(data); // Check if the data object already exists as a tag\n      // Select it if it doesn't\n\n\n      var $existingOptions = self.$element.find('option').filter(function () {\n        return $(this).val() === item.id;\n      }); // If an existing option wasn't found for it, create the option\n\n      if (!$existingOptions.length) {\n        var $option = self.option(item);\n        $option.attr('data-select2-tag', true);\n\n        self._removeOldTags();\n\n        self.addOptions([$option]);\n      } // Select the item, now that we know there is an option for it\n\n\n      select(item);\n    }\n\n    function select(data) {\n      self.trigger('select', {\n        data: data\n      });\n    }\n\n    params.term = params.term || '';\n    var tokenData = this.tokenizer(params, this.options, createAndSelect);\n\n    if (tokenData.term !== params.term) {\n      // Replace the search term if we have the search box\n      if (this.$search.length) {\n        this.$search.val(tokenData.term);\n        this.$search.trigger('focus');\n      }\n\n      params.term = tokenData.term;\n    }\n\n    decorated.call(this, params, callback);\n  };\n\n  Tokenizer.prototype.tokenizer = function (_, params, options, callback) {\n    var separators = options.get('tokenSeparators') || [];\n    var term = params.term;\n    var i = 0;\n\n    var createTag = this.createTag || function (params) {\n      return {\n        id: params.term,\n        text: params.term\n      };\n    };\n\n    while (i < term.length) {\n      var termChar = term[i];\n\n      if ($.inArray(termChar, separators) === -1) {\n        i++;\n        continue;\n      }\n\n      var part = term.substr(0, i);\n      var partParams = $.extend({}, params, {\n        term: part\n      });\n      var data = createTag(partParams);\n\n      if (data == null) {\n        i++;\n        continue;\n      }\n\n      callback(data); // Reset the term to not include the tokenized portion\n\n      term = term.substr(i + 1) || '';\n      i = 0;\n    }\n\n    return {\n      term: term\n    };\n  };\n\n  return Tokenizer;\n});","map":{"version":3,"sources":["/Users/albab/bookapro/amazon/src/assets/vendor/select2/src/js/select2/data/tokenizer.js"],"names":["define","$","Tokenizer","decorated","$element","options","tokenizer","get","undefined","call","prototype","bind","container","$container","$search","dropdown","selection","find","query","params","callback","self","createAndSelect","data","item","_normalizeItem","$existingOptions","filter","val","id","length","$option","option","attr","_removeOldTags","addOptions","select","trigger","term","tokenData","_","separators","i","createTag","text","termChar","inArray","part","substr","partParams","extend"],"mappings":"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","sourcesContent":["define([\n  'jquery'\n], function ($) {\n  function Tokenizer (decorated, $element, options) {\n    var tokenizer = options.get('tokenizer');\n\n    if (tokenizer !== undefined) {\n      this.tokenizer = tokenizer;\n    }\n\n    decorated.call(this, $element, options);\n  }\n\n  Tokenizer.prototype.bind = function (decorated, container, $container) {\n    decorated.call(this, container, $container);\n\n    this.$search =  container.dropdown.$search || container.selection.$search ||\n      $container.find('.select2-search__field');\n  };\n\n  Tokenizer.prototype.query = function (decorated, params, callback) {\n    var self = this;\n\n    function createAndSelect (data) {\n      // Normalize the data object so we can use it for checks\n      var item = self._normalizeItem(data);\n\n      // Check if the data object already exists as a tag\n      // Select it if it doesn't\n      var $existingOptions = self.$element.find('option').filter(function () {\n        return $(this).val() === item.id;\n      });\n\n      // If an existing option wasn't found for it, create the option\n      if (!$existingOptions.length) {\n        var $option = self.option(item);\n        $option.attr('data-select2-tag', true);\n\n        self._removeOldTags();\n        self.addOptions([$option]);\n      }\n\n      // Select the item, now that we know there is an option for it\n      select(item);\n    }\n\n    function select (data) {\n      self.trigger('select', {\n        data: data\n      });\n    }\n\n    params.term = params.term || '';\n\n    var tokenData = this.tokenizer(params, this.options, createAndSelect);\n\n    if (tokenData.term !== params.term) {\n      // Replace the search term if we have the search box\n      if (this.$search.length) {\n        this.$search.val(tokenData.term);\n        this.$search.trigger('focus');\n      }\n\n      params.term = tokenData.term;\n    }\n\n    decorated.call(this, params, callback);\n  };\n\n  Tokenizer.prototype.tokenizer = function (_, params, options, callback) {\n    var separators = options.get('tokenSeparators') || [];\n    var term = params.term;\n    var i = 0;\n\n    var createTag = this.createTag || function (params) {\n      return {\n        id: params.term,\n        text: params.term\n      };\n    };\n\n    while (i < term.length) {\n      var termChar = term[i];\n\n      if ($.inArray(termChar, separators) === -1) {\n        i++;\n\n        continue;\n      }\n\n      var part = term.substr(0, i);\n      var partParams = $.extend({}, params, {\n        term: part\n      });\n\n      var data = createTag(partParams);\n\n      if (data == null) {\n        i++;\n        continue;\n      }\n\n      callback(data);\n\n      // Reset the term to not include the tokenized portion\n      term = term.substr(i + 1) || '';\n      i = 0;\n    }\n\n    return {\n      term: term\n    };\n  };\n\n  return Tokenizer;\n});\n"]},"metadata":{},"sourceType":"module"}