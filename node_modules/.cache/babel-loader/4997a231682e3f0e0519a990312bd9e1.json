{"ast":null,"code":"define([], function () {\n  function Query(decorated, $element, options) {\n    if (options.get('debug') && window.console && console.warn) {\n      console.warn('Select2: The `query` option has been deprecated in favor of a ' + 'custom data adapter that overrides the `query` method. Support ' + 'will be removed for the `query` option in future versions of ' + 'Select2.');\n    }\n\n    decorated.call(this, $element, options);\n  }\n\n  Query.prototype.query = function (_, params, callback) {\n    params.callback = callback;\n    var query = this.options.get('query');\n    query.call(null, params);\n  };\n\n  return Query;\n});","map":{"version":3,"sources":["/Users/albab/bookapro/amazon/src/assets/vendor/select2/src/js/select2/compat/query.js"],"names":["define","Query","decorated","$element","options","get","window","console","warn","call","prototype","query","_","params","callback"],"mappings":"AAAAA,MAAM,CAAC,EAAD,EAEH,YAAY;AACb,WAASC,KAAT,CAAgBC,SAAhB,EAA2BC,QAA3B,EAAqCC,OAArC,EAA8C;AAC5C,QAAIA,OAAO,CAACC,GAAR,CAAY,OAAZ,KAAwBC,MAAM,CAACC,OAA/B,IAA0CA,OAAO,CAACC,IAAtD,EAA4D;AAC1DD,MAAAA,OAAO,CAACC,IAAR,CACE,mEACA,iEADA,GAEA,+DAFA,GAGA,UAJF;AAMD;;AAEDN,IAAAA,SAAS,CAACO,IAAV,CAAe,IAAf,EAAqBN,QAArB,EAA+BC,OAA/B;AACD;;AAEDH,EAAAA,KAAK,CAACS,SAAN,CAAgBC,KAAhB,GAAwB,UAAUC,CAAV,EAAaC,MAAb,EAAqBC,QAArB,EAA+B;AACrDD,IAAAA,MAAM,CAACC,QAAP,GAAkBA,QAAlB;AAEA,QAAIH,KAAK,GAAG,KAAKP,OAAL,CAAaC,GAAb,CAAiB,OAAjB,CAAZ;AAEAM,IAAAA,KAAK,CAACF,IAAN,CAAW,IAAX,EAAiBI,MAAjB;AACD,GAND;;AAQA,SAAOZ,KAAP;AACD,CAzBK,CAAN","sourcesContent":["define([\n\n], function () {\n  function Query (decorated, $element, options) {\n    if (options.get('debug') && window.console && console.warn) {\n      console.warn(\n        'Select2: The `query` option has been deprecated in favor of a ' +\n        'custom data adapter that overrides the `query` method. Support ' +\n        'will be removed for the `query` option in future versions of ' +\n        'Select2.'\n      );\n    }\n\n    decorated.call(this, $element, options);\n  }\n\n  Query.prototype.query = function (_, params, callback) {\n    params.callback = callback;\n\n    var query = this.options.get('query');\n\n    query.call(null, params);\n  };\n\n  return Query;\n});\n"]},"metadata":{},"sourceType":"module"}