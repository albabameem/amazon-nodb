{"ast":null,"code":"import Parchment from 'parchment';\n\nclass ColorAttributor extends Parchment.Attributor.Style {\n  value(domNode) {\n    let value = super.value(domNode);\n    if (!value.startsWith('rgb(')) return value;\n    value = value.replace(/^[^\\d]+/, '').replace(/[^\\d]+$/, '');\n    return '#' + value.split(',').map(function (component) {\n      return ('00' + parseInt(component).toString(16)).slice(-2);\n    }).join('');\n  }\n\n}\n\nlet ColorClass = new Parchment.Attributor.Class('color', 'ql-color', {\n  scope: Parchment.Scope.INLINE\n});\nlet ColorStyle = new ColorAttributor('color', 'color', {\n  scope: Parchment.Scope.INLINE\n});\nexport { ColorAttributor, ColorClass, ColorStyle };","map":{"version":3,"sources":["/Users/albab/bookapro/amazon/src/assets/vendor/quill/formats/color.js"],"names":["Parchment","ColorAttributor","Attributor","Style","value","domNode","startsWith","replace","split","map","component","parseInt","toString","slice","join","ColorClass","Class","scope","Scope","INLINE","ColorStyle"],"mappings":"AAAA,OAAOA,SAAP,MAAsB,WAAtB;;AAEA,MAAMC,eAAN,SAA8BD,SAAS,CAACE,UAAV,CAAqBC,KAAnD,CAAyD;AACvDC,EAAAA,KAAK,CAACC,OAAD,EAAU;AACb,QAAID,KAAK,GAAG,MAAMA,KAAN,CAAYC,OAAZ,CAAZ;AACA,QAAI,CAACD,KAAK,CAACE,UAAN,CAAiB,MAAjB,CAAL,EAA+B,OAAOF,KAAP;AAC/BA,IAAAA,KAAK,GAAGA,KAAK,CAACG,OAAN,CAAc,SAAd,EAAyB,EAAzB,EAA6BA,OAA7B,CAAqC,SAArC,EAAgD,EAAhD,CAAR;AACA,WAAO,MAAMH,KAAK,CAACI,KAAN,CAAY,GAAZ,EAAiBC,GAAjB,CAAqB,UAASC,SAAT,EAAoB;AACpD,aAAO,CAAC,OAAOC,QAAQ,CAACD,SAAD,CAAR,CAAoBE,QAApB,CAA6B,EAA7B,CAAR,EAA0CC,KAA1C,CAAgD,CAAC,CAAjD,CAAP;AACD,KAFY,EAEVC,IAFU,CAEL,EAFK,CAAb;AAGD;;AARsD;;AAWzD,IAAIC,UAAU,GAAG,IAAIf,SAAS,CAACE,UAAV,CAAqBc,KAAzB,CAA+B,OAA/B,EAAwC,UAAxC,EAAoD;AACnEC,EAAAA,KAAK,EAAEjB,SAAS,CAACkB,KAAV,CAAgBC;AAD4C,CAApD,CAAjB;AAGA,IAAIC,UAAU,GAAG,IAAInB,eAAJ,CAAoB,OAApB,EAA6B,OAA7B,EAAsC;AACrDgB,EAAAA,KAAK,EAAEjB,SAAS,CAACkB,KAAV,CAAgBC;AAD8B,CAAtC,CAAjB;AAIA,SAASlB,eAAT,EAA0Bc,UAA1B,EAAsCK,UAAtC","sourcesContent":["import Parchment from 'parchment';\n\nclass ColorAttributor extends Parchment.Attributor.Style {\n  value(domNode) {\n    let value = super.value(domNode);\n    if (!value.startsWith('rgb(')) return value;\n    value = value.replace(/^[^\\d]+/, '').replace(/[^\\d]+$/, '');\n    return '#' + value.split(',').map(function(component) {\n      return ('00' + parseInt(component).toString(16)).slice(-2);\n    }).join('');\n  }\n}\n\nlet ColorClass = new Parchment.Attributor.Class('color', 'ql-color', {\n  scope: Parchment.Scope.INLINE\n});\nlet ColorStyle = new ColorAttributor('color', 'color', {\n  scope: Parchment.Scope.INLINE\n});\n\nexport { ColorAttributor, ColorClass, ColorStyle };\n"]},"metadata":{},"sourceType":"module"}