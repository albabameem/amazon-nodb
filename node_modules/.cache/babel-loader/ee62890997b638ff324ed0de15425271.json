{"ast":null,"code":"import Delta from 'quill-delta';\nimport Parchment from 'parchment';\nimport Quill from '../core/quill';\nimport logger from '../core/logger';\nimport Module from '../core/module';\nlet debug = logger('quill:toolbar');\n\nclass Toolbar extends Module {\n  constructor(quill, options) {\n    super(quill, options);\n\n    if (Array.isArray(this.options.container)) {\n      let container = document.createElement('div');\n      addControls(container, this.options.container);\n      quill.container.parentNode.insertBefore(container, quill.container);\n      this.container = container;\n    } else if (typeof this.options.container === 'string') {\n      this.container = document.querySelector(this.options.container);\n    } else {\n      this.container = this.options.container;\n    }\n\n    if (!(this.container instanceof HTMLElement)) {\n      return debug.error('Container required for toolbar', this.options);\n    }\n\n    this.container.classList.add('ql-toolbar');\n    this.controls = [];\n    this.handlers = {};\n    Object.keys(this.options.handlers).forEach(format => {\n      this.addHandler(format, this.options.handlers[format]);\n    });\n    [].forEach.call(this.container.querySelectorAll('button, select'), input => {\n      this.attach(input);\n    });\n    this.quill.on(Quill.events.EDITOR_CHANGE, (type, range) => {\n      if (type === Quill.events.SELECTION_CHANGE) {\n        this.update(range);\n      }\n    });\n    this.quill.on(Quill.events.SCROLL_OPTIMIZE, () => {\n      let [range] = this.quill.selection.getRange(); // quill.getSelection triggers update\n\n      this.update(range);\n    });\n  }\n\n  addHandler(format, handler) {\n    this.handlers[format] = handler;\n  }\n\n  attach(input) {\n    let format = [].find.call(input.classList, className => {\n      return className.indexOf('ql-') === 0;\n    });\n    if (!format) return;\n    format = format.slice('ql-'.length);\n\n    if (input.tagName === 'BUTTON') {\n      input.setAttribute('type', 'button');\n    }\n\n    if (this.handlers[format] == null) {\n      if (this.quill.scroll.whitelist != null && this.quill.scroll.whitelist[format] == null) {\n        debug.warn('ignoring attaching to disabled format', format, input);\n        return;\n      }\n\n      if (Parchment.query(format) == null) {\n        debug.warn('ignoring attaching to nonexistent format', format, input);\n        return;\n      }\n    }\n\n    let eventName = input.tagName === 'SELECT' ? 'change' : 'click';\n    input.addEventListener(eventName, e => {\n      let value;\n\n      if (input.tagName === 'SELECT') {\n        if (input.selectedIndex < 0) return;\n        let selected = input.options[input.selectedIndex];\n\n        if (selected.hasAttribute('selected')) {\n          value = false;\n        } else {\n          value = selected.value || false;\n        }\n      } else {\n        if (input.classList.contains('ql-active')) {\n          value = false;\n        } else {\n          value = input.value || !input.hasAttribute('value');\n        }\n\n        e.preventDefault();\n      }\n\n      this.quill.focus();\n      let [range] = this.quill.selection.getRange();\n\n      if (this.handlers[format] != null) {\n        this.handlers[format].call(this, value);\n      } else if (Parchment.query(format).prototype instanceof Parchment.Embed) {\n        value = prompt(`Enter ${format}`);\n        if (!value) return;\n        this.quill.updateContents(new Delta().retain(range.index).delete(range.length).insert({\n          [format]: value\n        }), Quill.sources.USER);\n      } else {\n        this.quill.format(format, value, Quill.sources.USER);\n      }\n\n      this.update(range);\n    }); // TODO use weakmap\n\n    this.controls.push([format, input]);\n  }\n\n  update(range) {\n    let formats = range == null ? {} : this.quill.getFormat(range);\n    this.controls.forEach(function (pair) {\n      let [format, input] = pair;\n\n      if (input.tagName === 'SELECT') {\n        let option;\n\n        if (range == null) {\n          option = null;\n        } else if (formats[format] == null) {\n          option = input.querySelector('option[selected]');\n        } else if (!Array.isArray(formats[format])) {\n          let value = formats[format];\n\n          if (typeof value === 'string') {\n            value = value.replace(/\\\"/g, '\\\\\"');\n          }\n\n          option = input.querySelector(`option[value=\"${value}\"]`);\n        }\n\n        if (option == null) {\n          input.value = ''; // TODO make configurable?\n\n          input.selectedIndex = -1;\n        } else {\n          option.selected = true;\n        }\n      } else {\n        if (range == null) {\n          input.classList.remove('ql-active');\n        } else if (input.hasAttribute('value')) {\n          // both being null should match (default values)\n          // '1' should match with 1 (headers)\n          let isActive = formats[format] === input.getAttribute('value') || formats[format] != null && formats[format].toString() === input.getAttribute('value') || formats[format] == null && !input.getAttribute('value');\n          input.classList.toggle('ql-active', isActive);\n        } else {\n          input.classList.toggle('ql-active', formats[format] != null);\n        }\n      }\n    });\n  }\n\n}\n\nToolbar.DEFAULTS = {};\n\nfunction addButton(container, format, value) {\n  let input = document.createElement('button');\n  input.setAttribute('type', 'button');\n  input.classList.add('ql-' + format);\n\n  if (value != null) {\n    input.value = value;\n  }\n\n  container.appendChild(input);\n}\n\nfunction addControls(container, groups) {\n  if (!Array.isArray(groups[0])) {\n    groups = [groups];\n  }\n\n  groups.forEach(function (controls) {\n    let group = document.createElement('span');\n    group.classList.add('ql-formats');\n    controls.forEach(function (control) {\n      if (typeof control === 'string') {\n        addButton(group, control);\n      } else {\n        let format = Object.keys(control)[0];\n        let value = control[format];\n\n        if (Array.isArray(value)) {\n          addSelect(group, format, value);\n        } else {\n          addButton(group, format, value);\n        }\n      }\n    });\n    container.appendChild(group);\n  });\n}\n\nfunction addSelect(container, format, values) {\n  let input = document.createElement('select');\n  input.classList.add('ql-' + format);\n  values.forEach(function (value) {\n    let option = document.createElement('option');\n\n    if (value !== false) {\n      option.setAttribute('value', value);\n    } else {\n      option.setAttribute('selected', 'selected');\n    }\n\n    input.appendChild(option);\n  });\n  container.appendChild(input);\n}\n\nToolbar.DEFAULTS = {\n  container: null,\n  handlers: {\n    clean: function () {\n      let range = this.quill.getSelection();\n      if (range == null) return;\n\n      if (range.length == 0) {\n        let formats = this.quill.getFormat();\n        Object.keys(formats).forEach(name => {\n          // Clean functionality in existing apps only clean inline formats\n          if (Parchment.query(name, Parchment.Scope.INLINE) != null) {\n            this.quill.format(name, false);\n          }\n        });\n      } else {\n        this.quill.removeFormat(range, Quill.sources.USER);\n      }\n    },\n    direction: function (value) {\n      let align = this.quill.getFormat()['align'];\n\n      if (value === 'rtl' && align == null) {\n        this.quill.format('align', 'right', Quill.sources.USER);\n      } else if (!value && align === 'right') {\n        this.quill.format('align', false, Quill.sources.USER);\n      }\n\n      this.quill.format('direction', value, Quill.sources.USER);\n    },\n    indent: function (value) {\n      let range = this.quill.getSelection();\n      let formats = this.quill.getFormat(range);\n      let indent = parseInt(formats.indent || 0);\n\n      if (value === '+1' || value === '-1') {\n        let modifier = value === '+1' ? 1 : -1;\n        if (formats.direction === 'rtl') modifier *= -1;\n        this.quill.format('indent', indent + modifier, Quill.sources.USER);\n      }\n    },\n    link: function (value) {\n      if (value === true) {\n        value = prompt('Enter link URL:');\n      }\n\n      this.quill.format('link', value, Quill.sources.USER);\n    },\n    list: function (value) {\n      let range = this.quill.getSelection();\n      let formats = this.quill.getFormat(range);\n\n      if (value === 'check') {\n        if (formats['list'] === 'checked' || formats['list'] === 'unchecked') {\n          this.quill.format('list', false, Quill.sources.USER);\n        } else {\n          this.quill.format('list', 'unchecked', Quill.sources.USER);\n        }\n      } else {\n        this.quill.format('list', value, Quill.sources.USER);\n      }\n    }\n  }\n};\nexport { Toolbar as default, addControls };","map":{"version":3,"sources":["/Users/albab/bookapro/amazon/src/assets/vendor/quill/modules/toolbar.js"],"names":["Delta","Parchment","Quill","logger","Module","debug","Toolbar","constructor","quill","options","Array","isArray","container","document","createElement","addControls","parentNode","insertBefore","querySelector","HTMLElement","error","classList","add","controls","handlers","Object","keys","forEach","format","addHandler","call","querySelectorAll","input","attach","on","events","EDITOR_CHANGE","type","range","SELECTION_CHANGE","update","SCROLL_OPTIMIZE","selection","getRange","handler","find","className","indexOf","slice","length","tagName","setAttribute","scroll","whitelist","warn","query","eventName","addEventListener","e","value","selectedIndex","selected","hasAttribute","contains","preventDefault","focus","prototype","Embed","prompt","updateContents","retain","index","delete","insert","sources","USER","push","formats","getFormat","pair","option","replace","remove","isActive","getAttribute","toString","toggle","DEFAULTS","addButton","appendChild","groups","group","control","addSelect","values","clean","getSelection","name","Scope","INLINE","removeFormat","direction","align","indent","parseInt","modifier","link","list","default"],"mappings":"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","sourcesContent":["import Delta from 'quill-delta';\nimport Parchment from 'parchment';\nimport Quill from '../core/quill';\nimport logger from '../core/logger';\nimport Module from '../core/module';\n\nlet debug = logger('quill:toolbar');\n\n\nclass Toolbar extends Module {\n  constructor(quill, options) {\n    super(quill, options);\n    if (Array.isArray(this.options.container)) {\n      let container = document.createElement('div');\n      addControls(container, this.options.container);\n      quill.container.parentNode.insertBefore(container, quill.container);\n      this.container = container;\n    } else if (typeof this.options.container === 'string') {\n      this.container = document.querySelector(this.options.container);\n    } else {\n      this.container = this.options.container;\n    }\n    if (!(this.container instanceof HTMLElement)) {\n      return debug.error('Container required for toolbar', this.options);\n    }\n    this.container.classList.add('ql-toolbar');\n    this.controls = [];\n    this.handlers = {};\n    Object.keys(this.options.handlers).forEach((format) => {\n      this.addHandler(format, this.options.handlers[format]);\n    });\n    [].forEach.call(this.container.querySelectorAll('button, select'), (input) => {\n      this.attach(input);\n    });\n    this.quill.on(Quill.events.EDITOR_CHANGE, (type, range) => {\n      if (type === Quill.events.SELECTION_CHANGE) {\n        this.update(range);\n      }\n    });\n    this.quill.on(Quill.events.SCROLL_OPTIMIZE, () => {\n      let [range, ] = this.quill.selection.getRange();  // quill.getSelection triggers update\n      this.update(range);\n    });\n  }\n\n  addHandler(format, handler) {\n    this.handlers[format] = handler;\n  }\n\n  attach(input) {\n    let format = [].find.call(input.classList, (className) => {\n      return className.indexOf('ql-') === 0;\n    });\n    if (!format) return;\n    format = format.slice('ql-'.length);\n    if (input.tagName === 'BUTTON') {\n      input.setAttribute('type', 'button');\n    }\n    if (this.handlers[format] == null) {\n      if (this.quill.scroll.whitelist != null && this.quill.scroll.whitelist[format] == null) {\n        debug.warn('ignoring attaching to disabled format', format, input);\n        return;\n      }\n      if (Parchment.query(format) == null) {\n        debug.warn('ignoring attaching to nonexistent format', format, input);\n        return;\n      }\n    }\n    let eventName = input.tagName === 'SELECT' ? 'change' : 'click';\n    input.addEventListener(eventName, (e) => {\n      let value;\n      if (input.tagName === 'SELECT') {\n        if (input.selectedIndex < 0) return;\n        let selected = input.options[input.selectedIndex];\n        if (selected.hasAttribute('selected')) {\n          value = false;\n        } else {\n          value = selected.value || false;\n        }\n      } else {\n        if (input.classList.contains('ql-active')) {\n          value = false;\n        } else {\n          value = input.value || !input.hasAttribute('value');\n        }\n        e.preventDefault();\n      }\n      this.quill.focus();\n      let [range, ] = this.quill.selection.getRange();\n      if (this.handlers[format] != null) {\n        this.handlers[format].call(this, value);\n      } else if (Parchment.query(format).prototype instanceof Parchment.Embed) {\n        value = prompt(`Enter ${format}`);\n        if (!value) return;\n        this.quill.updateContents(new Delta()\n          .retain(range.index)\n          .delete(range.length)\n          .insert({ [format]: value })\n        , Quill.sources.USER);\n      } else {\n        this.quill.format(format, value, Quill.sources.USER);\n      }\n      this.update(range);\n    });\n    // TODO use weakmap\n    this.controls.push([format, input]);\n  }\n\n  update(range) {\n    let formats = range == null ? {} : this.quill.getFormat(range);\n    this.controls.forEach(function(pair) {\n      let [format, input] = pair;\n      if (input.tagName === 'SELECT') {\n        let option;\n        if (range == null) {\n          option = null;\n        } else if (formats[format] == null) {\n          option = input.querySelector('option[selected]');\n        } else if (!Array.isArray(formats[format])) {\n          let value = formats[format];\n          if (typeof value === 'string') {\n            value = value.replace(/\\\"/g, '\\\\\"');\n          }\n          option = input.querySelector(`option[value=\"${value}\"]`);\n        }\n        if (option == null) {\n          input.value = '';   // TODO make configurable?\n          input.selectedIndex = -1;\n        } else {\n          option.selected = true;\n        }\n      } else {\n        if (range == null) {\n          input.classList.remove('ql-active');\n        } else if (input.hasAttribute('value')) {\n          // both being null should match (default values)\n          // '1' should match with 1 (headers)\n          let isActive = formats[format] === input.getAttribute('value') ||\n                         (formats[format] != null && formats[format].toString() === input.getAttribute('value')) ||\n                         (formats[format] == null && !input.getAttribute('value'));\n          input.classList.toggle('ql-active', isActive);\n        } else {\n          input.classList.toggle('ql-active', formats[format] != null);\n        }\n      }\n    });\n  }\n}\nToolbar.DEFAULTS = {};\n\n\nfunction addButton(container, format, value) {\n  let input = document.createElement('button');\n  input.setAttribute('type', 'button');\n  input.classList.add('ql-' + format);\n  if (value != null) {\n    input.value = value;\n  }\n  container.appendChild(input);\n}\n\nfunction addControls(container, groups) {\n  if (!Array.isArray(groups[0])) {\n    groups = [groups];\n  }\n  groups.forEach(function(controls) {\n    let group = document.createElement('span');\n    group.classList.add('ql-formats');\n    controls.forEach(function(control) {\n      if (typeof control === 'string') {\n        addButton(group, control);\n      } else {\n        let format = Object.keys(control)[0];\n        let value = control[format];\n        if (Array.isArray(value)) {\n          addSelect(group, format, value);\n        } else {\n          addButton(group, format, value);\n        }\n      }\n    });\n    container.appendChild(group);\n  });\n}\n\nfunction addSelect(container, format, values) {\n  let input = document.createElement('select');\n  input.classList.add('ql-' + format);\n  values.forEach(function(value) {\n    let option = document.createElement('option');\n    if (value !== false) {\n      option.setAttribute('value', value);\n    } else {\n      option.setAttribute('selected', 'selected');\n    }\n    input.appendChild(option);\n  });\n  container.appendChild(input);\n}\n\nToolbar.DEFAULTS = {\n  container: null,\n  handlers: {\n    clean: function() {\n      let range = this.quill.getSelection();\n      if (range == null) return;\n      if (range.length == 0) {\n        let formats = this.quill.getFormat();\n        Object.keys(formats).forEach((name) => {\n          // Clean functionality in existing apps only clean inline formats\n          if (Parchment.query(name, Parchment.Scope.INLINE) != null) {\n            this.quill.format(name, false);\n          }\n        });\n      } else {\n        this.quill.removeFormat(range, Quill.sources.USER);\n      }\n    },\n    direction: function(value) {\n      let align = this.quill.getFormat()['align'];\n      if (value === 'rtl' && align == null) {\n        this.quill.format('align', 'right', Quill.sources.USER);\n      } else if (!value && align === 'right') {\n        this.quill.format('align', false, Quill.sources.USER);\n      }\n      this.quill.format('direction', value, Quill.sources.USER);\n    },\n    indent: function(value) {\n      let range = this.quill.getSelection();\n      let formats = this.quill.getFormat(range);\n      let indent = parseInt(formats.indent || 0);\n      if (value === '+1' || value === '-1') {\n        let modifier = (value === '+1') ? 1 : -1;\n        if (formats.direction === 'rtl') modifier *= -1;\n        this.quill.format('indent', indent + modifier, Quill.sources.USER);\n      }\n    },\n    link: function(value) {\n      if (value === true) {\n        value = prompt('Enter link URL:');\n      }\n      this.quill.format('link', value, Quill.sources.USER);\n    },\n    list: function(value) {\n      let range = this.quill.getSelection();\n      let formats = this.quill.getFormat(range);\n      if (value === 'check') {\n        if (formats['list'] === 'checked' || formats['list'] === 'unchecked') {\n          this.quill.format('list', false, Quill.sources.USER);\n        } else {\n          this.quill.format('list', 'unchecked', Quill.sources.USER);\n        }\n      } else {\n        this.quill.format('list', value, Quill.sources.USER);\n      }\n    }\n  }\n}\n\n\nexport { Toolbar as default, addControls };\n"]},"metadata":{},"sourceType":"module"}