{"ast":null,"code":"","map":{"version":3,"sources":[],"names":[],"mappings":"","sourcesContent":["/**\n * Declaration for typed.js\n * Typed.js version: v2.0.11\n */\n\ndeclare module 'typed.js' {\n  interface TypedOptions {\n    /**\n     * strings to be typed\n     */\n    strings?: string[];\n    /**\n     * ID of element containing string children\n     */\n    stringsElement?: string;\n    /**\n     * type speed in milliseconds\n     */\n    typeSpeed?: number;\n    /**\n     * time before typing starts in milliseconds\n     */\n    startDelay?: number;\n    /**\n     * backspacing speed in milliseconds\n     */\n    backSpeed?: number;\n    /**\n     * only backspace what doesn't match the previous string\n     */\n    smartBackspace?: boolean;\n    /**\n     * shuffle the strings\n     */\n    shuffle?: boolean;\n    /**\n     * time before backspacing in milliseconds\n     */\n    backDelay?: number;\n    /**\n     * Fade out instead of backspace\n     */\n    fadeOut?: boolean;\n    /**\n     * css class for fade animation\n     */\n    fadeOutClass?: string;\n    /**\n     * Fade out delay in milliseconds\n     */\n    fadeOutDelay?: boolean;\n    /**\n     * loop strings\n     */\n    loop?: boolean;\n    /**\n     * amount of loops\n     */\n    loopCount?: number;\n    /**\n     * show cursor\n     */\n    showCursor?: boolean;\n    /**\n     * character for cursor\n     */\n    cursorChar?: string;\n    /**\n     * insert CSS for cursor and fadeOut into HTML\n     */\n    autoInsertCss?: boolean;\n    /**\n     * attribute for typing Ex: input placeholder, value, or just HTML text\n     */\n    attr?: string;\n    /**\n     * bind to focus and blur if el is text input\n     */\n    bindInputFocusEvents?: boolean;\n    /**\n     * 'html' or 'null' for plaintext\n     */\n    contentType?: string;\n    /**\n     * All typing is complete\n     */\n    onComplete?(self: Typed): void;\n    /**\n     * Before each string is typed\n     */\n    preStringTyped?(arrayPos: number, self: Typed): void;\n    /**\n     * After each string is typed\n     */\n    onStringTyped?(arrayPos: number, self: Typed): void;\n    /**\n     * During looping, after last string is typed\n     */\n    onLastStringBackspaced?(self: Typed): void;\n    /**\n     * Typing has been stopped\n     */\n    onTypingPaused?(arrayPos: number, self: Typed): void;\n    /**\n     * Typing has been started after being stopped\n     */\n    onTypingResumed?(arrayPos: number, self: Typed): void;\n    /**\n     * After reset\n     */\n    onReset?(self: Typed): void;\n    /**\n     * After stop\n     */\n    onStop?(arrayPos: number, self: Typed): void;\n    /**\n     * After start\n     */\n    onStart?(arrayPos: number, self: Typed): void;\n    /**\n     * After destroy\n     */\n    onDestroy?(self: Typed): void;\n  }\n\n  export default class Typed {\n    constructor(elementId: string, options: TypedOptions);\n    toggle(): void;\n    stop(): void;\n    start(): void;\n    destroy(): void;\n    reset(restart?: boolean): void;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}