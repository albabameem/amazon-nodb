{"ast":null,"code":"define(['jquery', 'require'], function ($, require) {\n  function Translation(dict) {\n    this.dict = dict || {};\n  }\n\n  Translation.prototype.all = function () {\n    return this.dict;\n  };\n\n  Translation.prototype.get = function (key) {\n    return this.dict[key];\n  };\n\n  Translation.prototype.extend = function (translation) {\n    this.dict = $.extend({}, translation.all(), this.dict);\n  }; // Static functions\n\n\n  Translation._cache = {};\n\n  Translation.loadPath = function (path) {\n    if (!(path in Translation._cache)) {\n      var translations = require(path);\n\n      Translation._cache[path] = translations;\n    }\n\n    return new Translation(Translation._cache[path]);\n  };\n\n  return Translation;\n});","map":{"version":3,"sources":["/Users/albab/bookapro/amazon/src/assets/vendor/select2/src/js/select2/translation.js"],"names":["define","$","require","Translation","dict","prototype","all","get","key","extend","translation","_cache","loadPath","path","translations"],"mappings":"AAAAA,MAAM,CAAC,CACL,QADK,EAEL,SAFK,CAAD,EAGH,UAAUC,CAAV,EAAaC,OAAb,EAAsB;AACvB,WAASC,WAAT,CAAsBC,IAAtB,EAA4B;AAC1B,SAAKA,IAAL,GAAYA,IAAI,IAAI,EAApB;AACD;;AAEDD,EAAAA,WAAW,CAACE,SAAZ,CAAsBC,GAAtB,GAA4B,YAAY;AACtC,WAAO,KAAKF,IAAZ;AACD,GAFD;;AAIAD,EAAAA,WAAW,CAACE,SAAZ,CAAsBE,GAAtB,GAA4B,UAAUC,GAAV,EAAe;AACzC,WAAO,KAAKJ,IAAL,CAAUI,GAAV,CAAP;AACD,GAFD;;AAIAL,EAAAA,WAAW,CAACE,SAAZ,CAAsBI,MAAtB,GAA+B,UAAUC,WAAV,EAAuB;AACpD,SAAKN,IAAL,GAAYH,CAAC,CAACQ,MAAF,CAAS,EAAT,EAAaC,WAAW,CAACJ,GAAZ,EAAb,EAAgC,KAAKF,IAArC,CAAZ;AACD,GAFD,CAbuB,CAiBvB;;;AAEAD,EAAAA,WAAW,CAACQ,MAAZ,GAAqB,EAArB;;AAEAR,EAAAA,WAAW,CAACS,QAAZ,GAAuB,UAAUC,IAAV,EAAgB;AACrC,QAAI,EAAEA,IAAI,IAAIV,WAAW,CAACQ,MAAtB,CAAJ,EAAmC;AACjC,UAAIG,YAAY,GAAGZ,OAAO,CAACW,IAAD,CAA1B;;AAEAV,MAAAA,WAAW,CAACQ,MAAZ,CAAmBE,IAAnB,IAA2BC,YAA3B;AACD;;AAED,WAAO,IAAIX,WAAJ,CAAgBA,WAAW,CAACQ,MAAZ,CAAmBE,IAAnB,CAAhB,CAAP;AACD,GARD;;AAUA,SAAOV,WAAP;AACD,CAnCK,CAAN","sourcesContent":["define([\n  'jquery',\n  'require'\n], function ($, require) {\n  function Translation (dict) {\n    this.dict = dict || {};\n  }\n\n  Translation.prototype.all = function () {\n    return this.dict;\n  };\n\n  Translation.prototype.get = function (key) {\n    return this.dict[key];\n  };\n\n  Translation.prototype.extend = function (translation) {\n    this.dict = $.extend({}, translation.all(), this.dict);\n  };\n\n  // Static functions\n\n  Translation._cache = {};\n\n  Translation.loadPath = function (path) {\n    if (!(path in Translation._cache)) {\n      var translations = require(path);\n\n      Translation._cache[path] = translations;\n    }\n\n    return new Translation(Translation._cache[path]);\n  };\n\n  return Translation;\n});\n"]},"metadata":{},"sourceType":"module"}