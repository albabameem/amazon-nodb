{"ast":null,"code":"import Inline from '../blots/inline';\n\nclass Link extends Inline {\n  static create(value) {\n    let node = super.create(value);\n    value = this.sanitize(value);\n    node.setAttribute('href', value);\n    node.setAttribute('rel', 'noopener noreferrer');\n    node.setAttribute('target', '_blank');\n    return node;\n  }\n\n  static formats(domNode) {\n    return domNode.getAttribute('href');\n  }\n\n  static sanitize(url) {\n    return sanitize(url, this.PROTOCOL_WHITELIST) ? url : this.SANITIZED_URL;\n  }\n\n  format(name, value) {\n    if (name !== this.statics.blotName || !value) return super.format(name, value);\n    value = this.constructor.sanitize(value);\n    this.domNode.setAttribute('href', value);\n  }\n\n}\n\nLink.blotName = 'link';\nLink.tagName = 'A';\nLink.SANITIZED_URL = 'about:blank';\nLink.PROTOCOL_WHITELIST = ['http', 'https', 'mailto', 'tel'];\n\nfunction sanitize(url, protocols) {\n  let anchor = document.createElement('a');\n  anchor.href = url;\n  let protocol = anchor.href.slice(0, anchor.href.indexOf(':'));\n  return protocols.indexOf(protocol) > -1;\n}\n\nexport { Link as default, sanitize };","map":{"version":3,"sources":["/Users/albab/bookapro/amazon/src/assets/vendor/quill/formats/link.js"],"names":["Inline","Link","create","value","node","sanitize","setAttribute","formats","domNode","getAttribute","url","PROTOCOL_WHITELIST","SANITIZED_URL","format","name","statics","blotName","constructor","tagName","protocols","anchor","document","createElement","href","protocol","slice","indexOf","default"],"mappings":"AAAA,OAAOA,MAAP,MAAmB,iBAAnB;;AAGA,MAAMC,IAAN,SAAmBD,MAAnB,CAA0B;AACX,SAANE,MAAM,CAACC,KAAD,EAAQ;AACnB,QAAIC,IAAI,GAAG,MAAMF,MAAN,CAAaC,KAAb,CAAX;AACAA,IAAAA,KAAK,GAAG,KAAKE,QAAL,CAAcF,KAAd,CAAR;AACAC,IAAAA,IAAI,CAACE,YAAL,CAAkB,MAAlB,EAA0BH,KAA1B;AACAC,IAAAA,IAAI,CAACE,YAAL,CAAkB,KAAlB,EAAyB,qBAAzB;AACAF,IAAAA,IAAI,CAACE,YAAL,CAAkB,QAAlB,EAA4B,QAA5B;AACA,WAAOF,IAAP;AACD;;AAEa,SAAPG,OAAO,CAACC,OAAD,EAAU;AACtB,WAAOA,OAAO,CAACC,YAAR,CAAqB,MAArB,CAAP;AACD;;AAEc,SAARJ,QAAQ,CAACK,GAAD,EAAM;AACnB,WAAOL,QAAQ,CAACK,GAAD,EAAM,KAAKC,kBAAX,CAAR,GAAyCD,GAAzC,GAA+C,KAAKE,aAA3D;AACD;;AAEDC,EAAAA,MAAM,CAACC,IAAD,EAAOX,KAAP,EAAc;AAClB,QAAIW,IAAI,KAAK,KAAKC,OAAL,CAAaC,QAAtB,IAAkC,CAACb,KAAvC,EAA8C,OAAO,MAAMU,MAAN,CAAaC,IAAb,EAAmBX,KAAnB,CAAP;AAC9CA,IAAAA,KAAK,GAAG,KAAKc,WAAL,CAAiBZ,QAAjB,CAA0BF,KAA1B,CAAR;AACA,SAAKK,OAAL,CAAaF,YAAb,CAA0B,MAA1B,EAAkCH,KAAlC;AACD;;AAtBuB;;AAwB1BF,IAAI,CAACe,QAAL,GAAgB,MAAhB;AACAf,IAAI,CAACiB,OAAL,GAAe,GAAf;AACAjB,IAAI,CAACW,aAAL,GAAqB,aAArB;AACAX,IAAI,CAACU,kBAAL,GAA0B,CAAC,MAAD,EAAS,OAAT,EAAkB,QAAlB,EAA4B,KAA5B,CAA1B;;AAGA,SAASN,QAAT,CAAkBK,GAAlB,EAAuBS,SAAvB,EAAkC;AAChC,MAAIC,MAAM,GAAGC,QAAQ,CAACC,aAAT,CAAuB,GAAvB,CAAb;AACAF,EAAAA,MAAM,CAACG,IAAP,GAAcb,GAAd;AACA,MAAIc,QAAQ,GAAGJ,MAAM,CAACG,IAAP,CAAYE,KAAZ,CAAkB,CAAlB,EAAqBL,MAAM,CAACG,IAAP,CAAYG,OAAZ,CAAoB,GAApB,CAArB,CAAf;AACA,SAAOP,SAAS,CAACO,OAAV,CAAkBF,QAAlB,IAA8B,CAAC,CAAtC;AACD;;AAGD,SAASvB,IAAI,IAAI0B,OAAjB,EAA0BtB,QAA1B","sourcesContent":["import Inline from '../blots/inline';\n\n\nclass Link extends Inline {\n  static create(value) {\n    let node = super.create(value);\n    value = this.sanitize(value);\n    node.setAttribute('href', value);\n    node.setAttribute('rel', 'noopener noreferrer');\n    node.setAttribute('target', '_blank');\n    return node;\n  }\n\n  static formats(domNode) {\n    return domNode.getAttribute('href');\n  }\n\n  static sanitize(url) {\n    return sanitize(url, this.PROTOCOL_WHITELIST) ? url : this.SANITIZED_URL;\n  }\n\n  format(name, value) {\n    if (name !== this.statics.blotName || !value) return super.format(name, value);\n    value = this.constructor.sanitize(value);\n    this.domNode.setAttribute('href', value);\n  }\n}\nLink.blotName = 'link';\nLink.tagName = 'A';\nLink.SANITIZED_URL = 'about:blank';\nLink.PROTOCOL_WHITELIST = ['http', 'https', 'mailto', 'tel'];\n\n\nfunction sanitize(url, protocols) {\n  let anchor = document.createElement('a');\n  anchor.href = url;\n  let protocol = anchor.href.slice(0, anchor.href.indexOf(':'));\n  return protocols.indexOf(protocol) > -1;\n}\n\n\nexport { Link as default, sanitize };\n"]},"metadata":{},"sourceType":"module"}