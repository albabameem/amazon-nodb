{"ast":null,"code":"define(['./array', '../utils', 'jquery'], function (ArrayAdapter, Utils, $) {\n  function AjaxAdapter($element, options) {\n    this.ajaxOptions = this._applyDefaults(options.get('ajax'));\n\n    if (this.ajaxOptions.processResults != null) {\n      this.processResults = this.ajaxOptions.processResults;\n    }\n\n    AjaxAdapter.__super__.constructor.call(this, $element, options);\n  }\n\n  Utils.Extend(AjaxAdapter, ArrayAdapter);\n\n  AjaxAdapter.prototype._applyDefaults = function (options) {\n    var defaults = {\n      data: function (params) {\n        return $.extend({}, params, {\n          q: params.term\n        });\n      },\n      transport: function (params, success, failure) {\n        var $request = $.ajax(params);\n        $request.then(success);\n        $request.fail(failure);\n        return $request;\n      }\n    };\n    return $.extend({}, defaults, options, true);\n  };\n\n  AjaxAdapter.prototype.processResults = function (results) {\n    return results;\n  };\n\n  AjaxAdapter.prototype.query = function (params, callback) {\n    var matches = [];\n    var self = this;\n\n    if (this._request != null) {\n      // JSONP requests cannot always be aborted\n      if ($.isFunction(this._request.abort)) {\n        this._request.abort();\n      }\n\n      this._request = null;\n    }\n\n    var options = $.extend({\n      type: 'GET'\n    }, this.ajaxOptions);\n\n    if (typeof options.url === 'function') {\n      options.url = options.url.call(this.$element, params);\n    }\n\n    if (typeof options.data === 'function') {\n      options.data = options.data.call(this.$element, params);\n    }\n\n    function request() {\n      var $request = options.transport(options, function (data) {\n        var results = self.processResults(data, params);\n\n        if (self.options.get('debug') && window.console && console.error) {\n          // Check to make sure that the response included a `results` key.\n          if (!results || !results.results || !$.isArray(results.results)) {\n            console.error('Select2: The AJAX results did not return an array in the ' + '`results` key of the response.');\n          }\n        }\n\n        callback(results);\n      }, function () {\n        // Attempt to detect if a request was aborted\n        // Only works if the transport exposes a status property\n        if ('status' in $request && ($request.status === 0 || $request.status === '0')) {\n          return;\n        }\n\n        self.trigger('results:message', {\n          message: 'errorLoading'\n        });\n      });\n      self._request = $request;\n    }\n\n    if (this.ajaxOptions.delay && params.term != null) {\n      if (this._queryTimeout) {\n        window.clearTimeout(this._queryTimeout);\n      }\n\n      this._queryTimeout = window.setTimeout(request, this.ajaxOptions.delay);\n    } else {\n      request();\n    }\n  };\n\n  return AjaxAdapter;\n});","map":{"version":3,"sources":["/Users/albab/bookapro/amazon/src/assets/vendor/select2/src/js/select2/data/ajax.js"],"names":["define","ArrayAdapter","Utils","$","AjaxAdapter","$element","options","ajaxOptions","_applyDefaults","get","processResults","__super__","constructor","call","Extend","prototype","defaults","data","params","extend","q","term","transport","success","failure","$request","ajax","then","fail","results","query","callback","matches","self","_request","isFunction","abort","type","url","request","window","console","error","isArray","status","trigger","message","delay","_queryTimeout","clearTimeout","setTimeout"],"mappings":"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","sourcesContent":["define([\n  './array',\n  '../utils',\n  'jquery'\n], function (ArrayAdapter, Utils, $) {\n  function AjaxAdapter ($element, options) {\n    this.ajaxOptions = this._applyDefaults(options.get('ajax'));\n\n    if (this.ajaxOptions.processResults != null) {\n      this.processResults = this.ajaxOptions.processResults;\n    }\n\n    AjaxAdapter.__super__.constructor.call(this, $element, options);\n  }\n\n  Utils.Extend(AjaxAdapter, ArrayAdapter);\n\n  AjaxAdapter.prototype._applyDefaults = function (options) {\n    var defaults = {\n      data: function (params) {\n        return $.extend({}, params, {\n          q: params.term\n        });\n      },\n      transport: function (params, success, failure) {\n        var $request = $.ajax(params);\n\n        $request.then(success);\n        $request.fail(failure);\n\n        return $request;\n      }\n    };\n\n    return $.extend({}, defaults, options, true);\n  };\n\n  AjaxAdapter.prototype.processResults = function (results) {\n    return results;\n  };\n\n  AjaxAdapter.prototype.query = function (params, callback) {\n    var matches = [];\n    var self = this;\n\n    if (this._request != null) {\n      // JSONP requests cannot always be aborted\n      if ($.isFunction(this._request.abort)) {\n        this._request.abort();\n      }\n\n      this._request = null;\n    }\n\n    var options = $.extend({\n      type: 'GET'\n    }, this.ajaxOptions);\n\n    if (typeof options.url === 'function') {\n      options.url = options.url.call(this.$element, params);\n    }\n\n    if (typeof options.data === 'function') {\n      options.data = options.data.call(this.$element, params);\n    }\n\n    function request () {\n      var $request = options.transport(options, function (data) {\n        var results = self.processResults(data, params);\n\n        if (self.options.get('debug') && window.console && console.error) {\n          // Check to make sure that the response included a `results` key.\n          if (!results || !results.results || !$.isArray(results.results)) {\n            console.error(\n              'Select2: The AJAX results did not return an array in the ' +\n              '`results` key of the response.'\n            );\n          }\n        }\n\n        callback(results);\n      }, function () {\n        // Attempt to detect if a request was aborted\n        // Only works if the transport exposes a status property\n        if ('status' in $request &&\n            ($request.status === 0 || $request.status === '0')) {\n          return;\n        }\n\n        self.trigger('results:message', {\n          message: 'errorLoading'\n        });\n      });\n\n      self._request = $request;\n    }\n\n    if (this.ajaxOptions.delay && params.term != null) {\n      if (this._queryTimeout) {\n        window.clearTimeout(this._queryTimeout);\n      }\n\n      this._queryTimeout = window.setTimeout(request, this.ajaxOptions.delay);\n    } else {\n      request();\n    }\n  };\n\n  return AjaxAdapter;\n});\n"]},"metadata":{},"sourceType":"module"}