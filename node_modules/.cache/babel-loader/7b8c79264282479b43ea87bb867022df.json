{"ast":null,"code":"define([], function () {\n  function MaximumSelectionLength(decorated, $e, options) {\n    this.maximumSelectionLength = options.get('maximumSelectionLength');\n    decorated.call(this, $e, options);\n  }\n\n  MaximumSelectionLength.prototype.bind = function (decorated, container, $container) {\n    var self = this;\n    decorated.call(this, container, $container);\n    container.on('select', function () {\n      self._checkIfMaximumSelected();\n    });\n  };\n\n  MaximumSelectionLength.prototype.query = function (decorated, params, callback) {\n    var self = this;\n\n    this._checkIfMaximumSelected(function () {\n      decorated.call(self, params, callback);\n    });\n  };\n\n  MaximumSelectionLength.prototype._checkIfMaximumSelected = function (_, successCallback) {\n    var self = this;\n    this.current(function (currentData) {\n      var count = currentData != null ? currentData.length : 0;\n\n      if (self.maximumSelectionLength > 0 && count >= self.maximumSelectionLength) {\n        self.trigger('results:message', {\n          message: 'maximumSelected',\n          args: {\n            maximum: self.maximumSelectionLength\n          }\n        });\n        return;\n      }\n\n      if (successCallback) {\n        successCallback();\n      }\n    });\n  };\n\n  return MaximumSelectionLength;\n});","map":{"version":3,"sources":["/Users/albab/bookapro/amazon/src/assets/vendor/select2/src/js/select2/data/maximumSelectionLength.js"],"names":["define","MaximumSelectionLength","decorated","$e","options","maximumSelectionLength","get","call","prototype","bind","container","$container","self","on","_checkIfMaximumSelected","query","params","callback","_","successCallback","current","currentData","count","length","trigger","message","args","maximum"],"mappings":"AAAAA,MAAM,CAAC,EAAD,EAEH,YAAW;AACZ,WAASC,sBAAT,CAAiCC,SAAjC,EAA4CC,EAA5C,EAAgDC,OAAhD,EAAyD;AACvD,SAAKC,sBAAL,GAA8BD,OAAO,CAACE,GAAR,CAAY,wBAAZ,CAA9B;AAEAJ,IAAAA,SAAS,CAACK,IAAV,CAAe,IAAf,EAAqBJ,EAArB,EAAyBC,OAAzB;AACD;;AAEDH,EAAAA,sBAAsB,CAACO,SAAvB,CAAiCC,IAAjC,GACE,UAAUP,SAAV,EAAqBQ,SAArB,EAAgCC,UAAhC,EAA4C;AAC1C,QAAIC,IAAI,GAAG,IAAX;AAEAV,IAAAA,SAAS,CAACK,IAAV,CAAe,IAAf,EAAqBG,SAArB,EAAgCC,UAAhC;AAEAD,IAAAA,SAAS,CAACG,EAAV,CAAa,QAAb,EAAuB,YAAY;AACjCD,MAAAA,IAAI,CAACE,uBAAL;AACD,KAFD;AAGH,GATD;;AAWAb,EAAAA,sBAAsB,CAACO,SAAvB,CAAiCO,KAAjC,GACE,UAAUb,SAAV,EAAqBc,MAArB,EAA6BC,QAA7B,EAAuC;AACrC,QAAIL,IAAI,GAAG,IAAX;;AAEA,SAAKE,uBAAL,CAA6B,YAAY;AACvCZ,MAAAA,SAAS,CAACK,IAAV,CAAeK,IAAf,EAAqBI,MAArB,EAA6BC,QAA7B;AACD,KAFD;AAGH,GAPD;;AASAhB,EAAAA,sBAAsB,CAACO,SAAvB,CAAiCM,uBAAjC,GACE,UAAUI,CAAV,EAAaC,eAAb,EAA8B;AAC5B,QAAIP,IAAI,GAAG,IAAX;AAEA,SAAKQ,OAAL,CAAa,UAAUC,WAAV,EAAuB;AAClC,UAAIC,KAAK,GAAGD,WAAW,IAAI,IAAf,GAAsBA,WAAW,CAACE,MAAlC,GAA2C,CAAvD;;AACA,UAAIX,IAAI,CAACP,sBAAL,GAA8B,CAA9B,IACFiB,KAAK,IAAIV,IAAI,CAACP,sBADhB,EACwC;AACtCO,QAAAA,IAAI,CAACY,OAAL,CAAa,iBAAb,EAAgC;AAC9BC,UAAAA,OAAO,EAAE,iBADqB;AAE9BC,UAAAA,IAAI,EAAE;AACJC,YAAAA,OAAO,EAAEf,IAAI,CAACP;AADV;AAFwB,SAAhC;AAMA;AACD;;AAED,UAAIc,eAAJ,EAAqB;AACnBA,QAAAA,eAAe;AAChB;AACF,KAhBD;AAiBH,GArBD;;AAuBA,SAAOlB,sBAAP;AACD,CArDK,CAAN","sourcesContent":["define([\n\n], function (){\n  function MaximumSelectionLength (decorated, $e, options) {\n    this.maximumSelectionLength = options.get('maximumSelectionLength');\n\n    decorated.call(this, $e, options);\n  }\n\n  MaximumSelectionLength.prototype.bind =\n    function (decorated, container, $container) {\n      var self = this;\n\n      decorated.call(this, container, $container);\n\n      container.on('select', function () {\n        self._checkIfMaximumSelected();\n      });\n  };\n\n  MaximumSelectionLength.prototype.query =\n    function (decorated, params, callback) {\n      var self = this;\n\n      this._checkIfMaximumSelected(function () {\n        decorated.call(self, params, callback);\n      });\n  };\n\n  MaximumSelectionLength.prototype._checkIfMaximumSelected =\n    function (_, successCallback) {\n      var self = this;\n\n      this.current(function (currentData) {\n        var count = currentData != null ? currentData.length : 0;\n        if (self.maximumSelectionLength > 0 &&\n          count >= self.maximumSelectionLength) {\n          self.trigger('results:message', {\n            message: 'maximumSelected',\n            args: {\n              maximum: self.maximumSelectionLength\n            }\n          });\n          return;\n        }\n\n        if (successCallback) {\n          successCallback();\n        }\n      });\n  };\n\n  return MaximumSelectionLength;\n});\n"]},"metadata":{},"sourceType":"module"}