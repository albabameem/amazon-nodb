{"ast":null,"code":"define([], function () {\n  function MinimumInputLength(decorated, $e, options) {\n    this.minimumInputLength = options.get('minimumInputLength');\n    decorated.call(this, $e, options);\n  }\n\n  MinimumInputLength.prototype.query = function (decorated, params, callback) {\n    params.term = params.term || '';\n\n    if (params.term.length < this.minimumInputLength) {\n      this.trigger('results:message', {\n        message: 'inputTooShort',\n        args: {\n          minimum: this.minimumInputLength,\n          input: params.term,\n          params: params\n        }\n      });\n      return;\n    }\n\n    decorated.call(this, params, callback);\n  };\n\n  return MinimumInputLength;\n});","map":{"version":3,"sources":["/Users/albab/bookapro/amazon/src/assets/vendor/select2/src/js/select2/data/minimumInputLength.js"],"names":["define","MinimumInputLength","decorated","$e","options","minimumInputLength","get","call","prototype","query","params","callback","term","length","trigger","message","args","minimum","input"],"mappings":"AAAAA,MAAM,CAAC,EAAD,EAEH,YAAY;AACb,WAASC,kBAAT,CAA6BC,SAA7B,EAAwCC,EAAxC,EAA4CC,OAA5C,EAAqD;AACnD,SAAKC,kBAAL,GAA0BD,OAAO,CAACE,GAAR,CAAY,oBAAZ,CAA1B;AAEAJ,IAAAA,SAAS,CAACK,IAAV,CAAe,IAAf,EAAqBJ,EAArB,EAAyBC,OAAzB;AACD;;AAEDH,EAAAA,kBAAkB,CAACO,SAAnB,CAA6BC,KAA7B,GAAqC,UAAUP,SAAV,EAAqBQ,MAArB,EAA6BC,QAA7B,EAAuC;AAC1ED,IAAAA,MAAM,CAACE,IAAP,GAAcF,MAAM,CAACE,IAAP,IAAe,EAA7B;;AAEA,QAAIF,MAAM,CAACE,IAAP,CAAYC,MAAZ,GAAqB,KAAKR,kBAA9B,EAAkD;AAChD,WAAKS,OAAL,CAAa,iBAAb,EAAgC;AAC9BC,QAAAA,OAAO,EAAE,eADqB;AAE9BC,QAAAA,IAAI,EAAE;AACJC,UAAAA,OAAO,EAAE,KAAKZ,kBADV;AAEJa,UAAAA,KAAK,EAAER,MAAM,CAACE,IAFV;AAGJF,UAAAA,MAAM,EAAEA;AAHJ;AAFwB,OAAhC;AASA;AACD;;AAEDR,IAAAA,SAAS,CAACK,IAAV,CAAe,IAAf,EAAqBG,MAArB,EAA6BC,QAA7B;AACD,GAjBD;;AAmBA,SAAOV,kBAAP;AACD,CA7BK,CAAN","sourcesContent":["define([\n\n], function () {\n  function MinimumInputLength (decorated, $e, options) {\n    this.minimumInputLength = options.get('minimumInputLength');\n\n    decorated.call(this, $e, options);\n  }\n\n  MinimumInputLength.prototype.query = function (decorated, params, callback) {\n    params.term = params.term || '';\n\n    if (params.term.length < this.minimumInputLength) {\n      this.trigger('results:message', {\n        message: 'inputTooShort',\n        args: {\n          minimum: this.minimumInputLength,\n          input: params.term,\n          params: params\n        }\n      });\n\n      return;\n    }\n\n    decorated.call(this, params, callback);\n  };\n\n  return MinimumInputLength;\n});\n"]},"metadata":{},"sourceType":"module"}