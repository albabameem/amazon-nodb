{"ast":null,"code":"import extend from 'extend';\nimport Emitter from '../core/emitter';\nimport BaseTheme, { BaseTooltip } from './base';\nimport LinkBlot from '../formats/link';\nimport { Range } from '../core/selection';\nimport icons from '../ui/icons';\nconst TOOLBAR_CONFIG = [[{\n  header: ['1', '2', '3', false]\n}], ['bold', 'italic', 'underline', 'link'], [{\n  list: 'ordered'\n}, {\n  list: 'bullet'\n}], ['clean']];\n\nclass SnowTheme extends BaseTheme {\n  constructor(quill, options) {\n    if (options.modules.toolbar != null && options.modules.toolbar.container == null) {\n      options.modules.toolbar.container = TOOLBAR_CONFIG;\n    }\n\n    super(quill, options);\n    this.quill.container.classList.add('ql-snow');\n  }\n\n  extendToolbar(toolbar) {\n    toolbar.container.classList.add('ql-snow');\n    this.buildButtons([].slice.call(toolbar.container.querySelectorAll('button')), icons);\n    this.buildPickers([].slice.call(toolbar.container.querySelectorAll('select')), icons);\n    this.tooltip = new SnowTooltip(this.quill, this.options.bounds);\n\n    if (toolbar.container.querySelector('.ql-link')) {\n      this.quill.keyboard.addBinding({\n        key: 'K',\n        shortKey: true\n      }, function (range, context) {\n        toolbar.handlers['link'].call(toolbar, !context.format.link);\n      });\n    }\n  }\n\n}\n\nSnowTheme.DEFAULTS = extend(true, {}, BaseTheme.DEFAULTS, {\n  modules: {\n    toolbar: {\n      handlers: {\n        link: function (value) {\n          if (value) {\n            let range = this.quill.getSelection();\n            if (range == null || range.length == 0) return;\n            let preview = this.quill.getText(range);\n\n            if (/^\\S+@\\S+\\.\\S+$/.test(preview) && preview.indexOf('mailto:') !== 0) {\n              preview = 'mailto:' + preview;\n            }\n\n            let tooltip = this.quill.theme.tooltip;\n            tooltip.edit('link', preview);\n          } else {\n            this.quill.format('link', false);\n          }\n        }\n      }\n    }\n  }\n});\n\nclass SnowTooltip extends BaseTooltip {\n  constructor(quill, bounds) {\n    super(quill, bounds);\n    this.preview = this.root.querySelector('a.ql-preview');\n  }\n\n  listen() {\n    super.listen();\n    this.root.querySelector('a.ql-action').addEventListener('click', event => {\n      if (this.root.classList.contains('ql-editing')) {\n        this.save();\n      } else {\n        this.edit('link', this.preview.textContent);\n      }\n\n      event.preventDefault();\n    });\n    this.root.querySelector('a.ql-remove').addEventListener('click', event => {\n      if (this.linkRange != null) {\n        let range = this.linkRange;\n        this.restoreFocus();\n        this.quill.formatText(range, 'link', false, Emitter.sources.USER);\n        delete this.linkRange;\n      }\n\n      event.preventDefault();\n      this.hide();\n    });\n    this.quill.on(Emitter.events.SELECTION_CHANGE, (range, oldRange, source) => {\n      if (range == null) return;\n\n      if (range.length === 0 && source === Emitter.sources.USER) {\n        let [link, offset] = this.quill.scroll.descendant(LinkBlot, range.index);\n\n        if (link != null) {\n          this.linkRange = new Range(range.index - offset, link.length());\n          let preview = LinkBlot.formats(link.domNode);\n          this.preview.textContent = preview;\n          this.preview.setAttribute('href', preview);\n          this.show();\n          this.position(this.quill.getBounds(this.linkRange));\n          return;\n        }\n      } else {\n        delete this.linkRange;\n      }\n\n      this.hide();\n    });\n  }\n\n  show() {\n    super.show();\n    this.root.removeAttribute('data-mode');\n  }\n\n}\n\nSnowTooltip.TEMPLATE = ['<a class=\"ql-preview\" rel=\"noopener noreferrer\" target=\"_blank\" href=\"about:blank\"></a>', '<input type=\"text\" data-formula=\"e=mc^2\" data-link=\"https://quilljs.com\" data-video=\"Embed URL\">', '<a class=\"ql-action\"></a>', '<a class=\"ql-remove\"></a>'].join('');\nexport default SnowTheme;","map":{"version":3,"sources":["/Users/albab/bookapro/amazon/src/assets/vendor/quill/themes/snow.js"],"names":["extend","Emitter","BaseTheme","BaseTooltip","LinkBlot","Range","icons","TOOLBAR_CONFIG","header","list","SnowTheme","constructor","quill","options","modules","toolbar","container","classList","add","extendToolbar","buildButtons","slice","call","querySelectorAll","buildPickers","tooltip","SnowTooltip","bounds","querySelector","keyboard","addBinding","key","shortKey","range","context","handlers","format","link","DEFAULTS","value","getSelection","length","preview","getText","test","indexOf","theme","edit","root","listen","addEventListener","event","contains","save","textContent","preventDefault","linkRange","restoreFocus","formatText","sources","USER","hide","on","events","SELECTION_CHANGE","oldRange","source","offset","scroll","descendant","index","formats","domNode","setAttribute","show","position","getBounds","removeAttribute","TEMPLATE","join"],"mappings":"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","sourcesContent":["import extend from 'extend';\nimport Emitter from '../core/emitter';\nimport BaseTheme, { BaseTooltip } from './base';\nimport LinkBlot from '../formats/link';\nimport { Range } from '../core/selection';\nimport icons from '../ui/icons';\n\n\nconst TOOLBAR_CONFIG = [\n  [{ header: ['1', '2', '3', false] }],\n  ['bold', 'italic', 'underline', 'link'],\n  [{ list: 'ordered' }, { list: 'bullet' }],\n  ['clean']\n];\n\nclass SnowTheme extends BaseTheme {\n  constructor(quill, options) {\n    if (options.modules.toolbar != null && options.modules.toolbar.container == null) {\n      options.modules.toolbar.container = TOOLBAR_CONFIG;\n    }\n    super(quill, options);\n    this.quill.container.classList.add('ql-snow');\n  }\n\n  extendToolbar(toolbar) {\n    toolbar.container.classList.add('ql-snow');\n    this.buildButtons([].slice.call(toolbar.container.querySelectorAll('button')), icons);\n    this.buildPickers([].slice.call(toolbar.container.querySelectorAll('select')), icons);\n    this.tooltip = new SnowTooltip(this.quill, this.options.bounds);\n    if (toolbar.container.querySelector('.ql-link')) {\n      this.quill.keyboard.addBinding({ key: 'K', shortKey: true }, function(range, context) {\n        toolbar.handlers['link'].call(toolbar, !context.format.link);\n      });\n    }\n  }\n}\nSnowTheme.DEFAULTS = extend(true, {}, BaseTheme.DEFAULTS, {\n  modules: {\n    toolbar: {\n      handlers: {\n        link: function(value) {\n          if (value) {\n            let range = this.quill.getSelection();\n            if (range == null || range.length == 0) return;\n            let preview = this.quill.getText(range);\n            if (/^\\S+@\\S+\\.\\S+$/.test(preview) && preview.indexOf('mailto:') !== 0) {\n              preview = 'mailto:' + preview;\n            }\n            let tooltip = this.quill.theme.tooltip;\n            tooltip.edit('link', preview);\n          } else {\n            this.quill.format('link', false);\n          }\n        }\n      }\n    }\n  }\n});\n\n\nclass SnowTooltip extends BaseTooltip {\n  constructor(quill, bounds) {\n    super(quill, bounds);\n    this.preview = this.root.querySelector('a.ql-preview');\n  }\n\n  listen() {\n    super.listen();\n    this.root.querySelector('a.ql-action').addEventListener('click', (event) => {\n      if (this.root.classList.contains('ql-editing')) {\n        this.save();\n      } else {\n        this.edit('link', this.preview.textContent);\n      }\n      event.preventDefault();\n    });\n    this.root.querySelector('a.ql-remove').addEventListener('click', (event) => {\n      if (this.linkRange != null) {\n        let range = this.linkRange;\n        this.restoreFocus();\n        this.quill.formatText(range, 'link', false, Emitter.sources.USER);\n        delete this.linkRange;\n      }\n      event.preventDefault();\n      this.hide();\n    });\n    this.quill.on(Emitter.events.SELECTION_CHANGE, (range, oldRange, source) => {\n      if (range == null) return;\n      if (range.length === 0 && source === Emitter.sources.USER) {\n        let [link, offset] = this.quill.scroll.descendant(LinkBlot, range.index);\n        if (link != null) {\n          this.linkRange = new Range(range.index - offset, link.length());\n          let preview = LinkBlot.formats(link.domNode);\n          this.preview.textContent = preview;\n          this.preview.setAttribute('href', preview);\n          this.show();\n          this.position(this.quill.getBounds(this.linkRange));\n          return;\n        }\n      } else {\n        delete this.linkRange;\n      }\n      this.hide();\n    });\n  }\n\n  show() {\n    super.show();\n    this.root.removeAttribute('data-mode');\n  }\n}\nSnowTooltip.TEMPLATE = [\n  '<a class=\"ql-preview\" rel=\"noopener noreferrer\" target=\"_blank\" href=\"about:blank\"></a>',\n  '<input type=\"text\" data-formula=\"e=mc^2\" data-link=\"https://quilljs.com\" data-video=\"Embed URL\">',\n  '<a class=\"ql-action\"></a>',\n  '<a class=\"ql-remove\"></a>'\n].join('');\n\n\nexport default SnowTheme;\n"]},"metadata":{},"sourceType":"module"}