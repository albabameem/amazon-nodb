{"ast":null,"code":"define(['jquery', './utils'], function ($, CompatUtils) {\n  // No-op CSS adapter that discards all classes by default\n  function _dropdownAdapter(clazz) {\n    return null;\n  }\n\n  function DropdownCSS() {}\n\n  DropdownCSS.prototype.render = function (decorated) {\n    var $dropdown = decorated.call(this);\n    var dropdownCssClass = this.options.get('dropdownCssClass') || '';\n\n    if ($.isFunction(dropdownCssClass)) {\n      dropdownCssClass = dropdownCssClass(this.$element);\n    }\n\n    var dropdownCssAdapter = this.options.get('adaptDropdownCssClass');\n    dropdownCssAdapter = dropdownCssAdapter || _dropdownAdapter;\n\n    if (dropdownCssClass.indexOf(':all:') !== -1) {\n      dropdownCssClass = dropdownCssClass.replace(':all:', '');\n      var _cssAdapter = dropdownCssAdapter;\n\n      dropdownCssAdapter = function (clazz) {\n        var adapted = _cssAdapter(clazz);\n\n        if (adapted != null) {\n          // Append the old one along with the adapted one\n          return adapted + ' ' + clazz;\n        }\n\n        return clazz;\n      };\n    }\n\n    var dropdownCss = this.options.get('dropdownCss') || {};\n\n    if ($.isFunction(dropdownCss)) {\n      dropdownCss = dropdownCss(this.$element);\n    }\n\n    CompatUtils.syncCssClasses($dropdown, this.$element, dropdownCssAdapter);\n    $dropdown.css(dropdownCss);\n    $dropdown.addClass(dropdownCssClass);\n    return $dropdown;\n  };\n\n  return DropdownCSS;\n});","map":{"version":3,"sources":["/Users/albab/bookapro/amazon/src/assets/vendor/select2/src/js/select2/compat/dropdownCss.js"],"names":["define","$","CompatUtils","_dropdownAdapter","clazz","DropdownCSS","prototype","render","decorated","$dropdown","call","dropdownCssClass","options","get","isFunction","$element","dropdownCssAdapter","indexOf","replace","_cssAdapter","adapted","dropdownCss","syncCssClasses","css","addClass"],"mappings":"AAAAA,MAAM,CAAC,CACL,QADK,EAEL,SAFK,CAAD,EAGH,UAAUC,CAAV,EAAaC,WAAb,EAA0B;AAC3B;AACA,WAASC,gBAAT,CAA2BC,KAA3B,EAAkC;AAChC,WAAO,IAAP;AACD;;AAED,WAASC,WAAT,GAAwB,CAAG;;AAE3BA,EAAAA,WAAW,CAACC,SAAZ,CAAsBC,MAAtB,GAA+B,UAAUC,SAAV,EAAqB;AAClD,QAAIC,SAAS,GAAGD,SAAS,CAACE,IAAV,CAAe,IAAf,CAAhB;AAEA,QAAIC,gBAAgB,GAAG,KAAKC,OAAL,CAAaC,GAAb,CAAiB,kBAAjB,KAAwC,EAA/D;;AAEA,QAAIZ,CAAC,CAACa,UAAF,CAAaH,gBAAb,CAAJ,EAAoC;AAClCA,MAAAA,gBAAgB,GAAGA,gBAAgB,CAAC,KAAKI,QAAN,CAAnC;AACD;;AAED,QAAIC,kBAAkB,GAAG,KAAKJ,OAAL,CAAaC,GAAb,CAAiB,uBAAjB,CAAzB;AACAG,IAAAA,kBAAkB,GAAGA,kBAAkB,IAAIb,gBAA3C;;AAEA,QAAIQ,gBAAgB,CAACM,OAAjB,CAAyB,OAAzB,MAAsC,CAAC,CAA3C,EAA8C;AAC5CN,MAAAA,gBAAgB,GAAGA,gBAAgB,CAACO,OAAjB,CAAyB,OAAzB,EAAkC,EAAlC,CAAnB;AAEA,UAAIC,WAAW,GAAGH,kBAAlB;;AAEAA,MAAAA,kBAAkB,GAAG,UAAUZ,KAAV,EAAiB;AACpC,YAAIgB,OAAO,GAAGD,WAAW,CAACf,KAAD,CAAzB;;AAEA,YAAIgB,OAAO,IAAI,IAAf,EAAqB;AACnB;AACA,iBAAOA,OAAO,GAAG,GAAV,GAAgBhB,KAAvB;AACD;;AAED,eAAOA,KAAP;AACD,OATD;AAUD;;AAED,QAAIiB,WAAW,GAAG,KAAKT,OAAL,CAAaC,GAAb,CAAiB,aAAjB,KAAmC,EAArD;;AAEA,QAAIZ,CAAC,CAACa,UAAF,CAAaO,WAAb,CAAJ,EAA+B;AAC7BA,MAAAA,WAAW,GAAGA,WAAW,CAAC,KAAKN,QAAN,CAAzB;AACD;;AAEDb,IAAAA,WAAW,CAACoB,cAAZ,CAA2Bb,SAA3B,EAAsC,KAAKM,QAA3C,EAAqDC,kBAArD;AAEAP,IAAAA,SAAS,CAACc,GAAV,CAAcF,WAAd;AACAZ,IAAAA,SAAS,CAACe,QAAV,CAAmBb,gBAAnB;AAEA,WAAOF,SAAP;AACD,GAzCD;;AA2CA,SAAOJ,WAAP;AACD,CAvDK,CAAN","sourcesContent":["define([\n  'jquery',\n  './utils'\n], function ($, CompatUtils) {\n  // No-op CSS adapter that discards all classes by default\n  function _dropdownAdapter (clazz) {\n    return null;\n  }\n\n  function DropdownCSS () { }\n\n  DropdownCSS.prototype.render = function (decorated) {\n    var $dropdown = decorated.call(this);\n\n    var dropdownCssClass = this.options.get('dropdownCssClass') || '';\n\n    if ($.isFunction(dropdownCssClass)) {\n      dropdownCssClass = dropdownCssClass(this.$element);\n    }\n\n    var dropdownCssAdapter = this.options.get('adaptDropdownCssClass');\n    dropdownCssAdapter = dropdownCssAdapter || _dropdownAdapter;\n\n    if (dropdownCssClass.indexOf(':all:') !== -1) {\n      dropdownCssClass = dropdownCssClass.replace(':all:', '');\n\n      var _cssAdapter = dropdownCssAdapter;\n\n      dropdownCssAdapter = function (clazz) {\n        var adapted = _cssAdapter(clazz);\n\n        if (adapted != null) {\n          // Append the old one along with the adapted one\n          return adapted + ' ' + clazz;\n        }\n\n        return clazz;\n      };\n    }\n\n    var dropdownCss = this.options.get('dropdownCss') || {};\n\n    if ($.isFunction(dropdownCss)) {\n      dropdownCss = dropdownCss(this.$element);\n    }\n\n    CompatUtils.syncCssClasses($dropdown, this.$element, dropdownCssAdapter);\n\n    $dropdown.css(dropdownCss);\n    $dropdown.addClass(dropdownCssClass);\n\n    return $dropdown;\n  };\n\n  return DropdownCSS;\n});\n"]},"metadata":{},"sourceType":"module"}